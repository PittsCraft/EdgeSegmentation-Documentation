{"interfaceLanguages":{"swift":[{"children":[{"title":"SwiftUI all-in-one integration","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/init(image:contentmode:zoomenabled:maxzoomscale:draggablesegmentation:overlayconfiguration:editionconfiguration:errorview:segmentation:input:)","title":"init(image: UIImage, contentMode: ContentMode, zoomEnabled: Bool, maxZoomScale: CGFloat, draggableSegmentation: Bool, overlayConfiguration: SegmentationOverlayConfiguration<OverlayFill, OverlayStroke>, editionConfiguration: SegmentationEditionConfiguration<PositivePoint, NegativePoint, Box, BoxTrash>, errorView: (Error) -> ErrorView, segmentation: Binding<Segmentation?>?, input: Binding<SegmentationInput>?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(activationpoint:)-2tvpk","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(activationpoint:)-7jyq4","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(named:_:)-2bpsy","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(named:_:)-4rhg6","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(named:_:)-9es11","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityactivationpoint(_:)-2jrzo","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityactivationpoint(_:)-6d9oh","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-11b27","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-1zz2v","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-20l8e","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-33cq9","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-5q647","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-7v2so","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-7w5nw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-t2fw","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhint(_:)-7l0zs","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhint(_:)-855sl","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhint(_:)-96lda","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityinputlabels(_:)-2nsd9","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityinputlabels(_:)-4eqf5","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityinputlabels(_:)-577zi","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabel(_:)-5f5jr","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabel(_:)-5xdtl","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabel(_:)-78jzq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-2bi2c","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-2ve4h","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-32v61","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-54tid","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ju76","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-80yai","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-8sh53","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-9m08d","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-2p4w5","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-36l59","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-5f1uk","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-8p627","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-4wt7f","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-5n2pw","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-75fkl","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-7dnft","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityvalue(_:)-187ht","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityvalue(_:)-1b338","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityvalue(_:)-3rlwp","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:)-4jayc","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:)-7pmx1","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:)-91ioc","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:message:)-1no09","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:message:)-32o6d","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:message:)-4os5q","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:)-4qtzc","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:)-9ybsz","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:)-zhk5","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:message:)-14cag","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:message:)-17rhg","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:message:)-1hgcz","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alignmentguide(_:computevalue:)-9rtdc","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alignmentguide(_:computevalue:)-vhmj","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/aspectratio(_:contentmode:)-317lc","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/aspectratio(_:contentmode:)-b42g","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:in:fillstyle:)-5kibx","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:in:fillstyle:)-baup","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(in:fillstyle:)-5ir7r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(in:fillstyle:)-8qz9i","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-1nqmn","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-95lym","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-9vch3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-yjjm","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonstyle(_:)-14i48","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonstyle(_:)-48gj3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2n8j9","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5e4kc","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6h584","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2ruzw","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ig88","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8nrgy","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2774o","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-63kqg","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8hlbe","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1b2km","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4nfmw","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5e1n4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentmargins(_:_:for:)-6cqqo","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentmargins(_:_:for:)-84xle","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(_:issuppressed:)-1fl9k","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(_:issuppressed:)-44y21","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(_:issuppressed:)-8zjkq","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogconfirmationlabel(_:)-8vy8m","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogconfirmationlabel(_:)-9yves","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogconfirmationlabel(_:)-tdb3","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogmessage(_:)-4sm8g","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogmessage(_:)-6ktpd","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogmessage(_:)-8hc4j","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1g5vx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5xwdn","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3sxpw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9war5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttype:oncompletion:)-63cl9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8f915","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7lxde","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-90fzl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporterfilenamelabel(_:)-1zwtk","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporterfilenamelabel(_:)-4hfdy","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporterfilenamelabel(_:)-9qk6f","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedobject(_:)-204e","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedobject(_:)-5qphi","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedsceneobject(_:)-1pf62","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedsceneobject(_:)-7ydcd","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedscenevalue(_:_:)-409k5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedscenevalue(_:_:)-5rslv","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedvalue(_:_:)-2tfpq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedvalue(_:_:)-5ekju","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/help(_:)-41m7f","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/help(_:)-52ocv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/help(_:)-6alg7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listitemtint(_:)-2oghk","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listitemtint(_:)-jsmy","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionspacing(_:)-7bolv","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionspacing(_:)-9rvpy","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:)-2z4to","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:)-3gfxu","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:)-6diqc","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:displaymode:)-102fi","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:displaymode:)-95t2d","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:displaymode:)-r633","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:)-199d2","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:)-5id2e","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-1aoy2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-4o11w","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-6npmw","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-zewz","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-18mwd","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-1fmh2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-7dwi6","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-7j747","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-7rd5d","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onchange(of:initial:_:)-5lz5g","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onchange(of:initial:_:)-8mv3q","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:delegate:)-32vet","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:delegate:)-6y04a","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-16b5b","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-5do0f","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-6qo7q","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-7i8u8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/padding(_:)-8enkj","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/padding(_:)-9masv","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/renameaction(_:)-smkd","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/renameaction(_:)-w0s8","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareainset(edge:alignment:spacing:content:)-51aw6","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareainset(edge:alignment:spacing:content:)-8jbaw","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareapadding(_:)-1u7z9","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareapadding(_:)-6uap1","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaleeffect(_:anchor:)-8fldn","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaleeffect(_:anchor:)-hnl6","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1s6d6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3h8h5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-52d7o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:placement:prompt:token:)-6v65","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:placement:prompt:token:)-79npk","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:placement:prompt:token:)-7hym9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:ispresented:placement:prompt:)-38onc","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:ispresented:placement:prompt:)-69qtp","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:ispresented:placement:prompt:)-7qezn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:)-1mt9z","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:)-3be1o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:)-7ymaq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:suggestions:)-4sxkw","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:suggestions:)-51woy","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:suggestions:)-7ba54","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:ispresented:placement:prompt:token:)-3hkkf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:ispresented:placement:prompt:token:)-8356p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:ispresented:placement:prompt:token:)-8l3q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:placement:prompt:token:)-19pi","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:placement:prompt:token:)-425ox","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:placement:prompt:token:)-7r6yq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5cyba","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6g16a","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8piih","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9rmj7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9tk4b","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-wjla","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(content:)-2w5kw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(content:)-6lcdp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarbackground(_:for:)-1mr20","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarbackground(_:for:)-3zn0z","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typeselectequivalent(_:)-3d0hy","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typeselectequivalent(_:)-54mqc","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typeselectequivalent(_:)-9q2vy","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typesettinglanguage(_:isenabled:)-1rgrq","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typesettinglanguage(_:isenabled:)-22bh3","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationeditor\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(activationpoint:)-2tvpk","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(activationpoint:)-7jyq4","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(named:_:)-2bpsy","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(named:_:)-4rhg6","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaction(named:_:)-9es11","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityactivationpoint(_:)-2jrzo","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityactivationpoint(_:)-6d9oh","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-11b27","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-1zz2v","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-20l8e","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-33cq9","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-5q647","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-7v2so","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-7w5nw","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitycustomcontent(_:_:importance:)-t2fw","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhint(_:)-7l0zs","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhint(_:)-855sl","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityhint(_:)-96lda","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityinputlabels(_:)-2nsd9","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityinputlabels(_:)-4eqf5","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityinputlabels(_:)-577zi","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabel(_:)-5f5jr","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabel(_:)-5xdtl","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabel(_:)-78jzq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-2bi2c","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-2ve4h","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-32v61","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:)-54tid","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ju76","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-80yai","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-8sh53","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entryid:entrylabel:)-9m08d","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-2p4w5","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-36l59","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-5f1uk","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:entries:entrylabel:)-8p627","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-4wt7f","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-5n2pw","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-75fkl","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotor(_:textranges:)-7dnft","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityvalue(_:)-187ht","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityvalue(_:)-1b338","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityvalue(_:)-3rlwp","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:)-4jayc","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:)-7pmx1","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:)-91ioc","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:message:)-1no09","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:message:)-32o6d","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:actions:message:)-4os5q","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:)-4qtzc","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:)-9ybsz","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:)-zhk5","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:message:)-14cag","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:message:)-17rhg","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(_:ispresented:presenting:actions:message:)-1hgcz","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alignmentguide(_:computevalue:)-9rtdc","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alignmentguide(_:computevalue:)-vhmj","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/aspectratio(_:contentmode:)-317lc","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/aspectratio(_:contentmode:)-b42g","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:in:fillstyle:)-5kibx","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(_:in:fillstyle:)-baup","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(in:fillstyle:)-5ir7r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/background(in:fillstyle:)-8qz9i","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-1nqmn","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-95lym","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-9vch3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badge(_:)-yjjm","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonstyle(_:)-14i48","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/buttonstyle(_:)-48gj3","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2n8j9","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5e4kc","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6h584","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2ruzw","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ig88","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8nrgy","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2774o","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-63kqg","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8hlbe","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1b2km","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4nfmw","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5e1n4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentmargins(_:_:for:)-6cqqo","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentmargins(_:_:for:)-84xle","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(_:issuppressed:)-1fl9k","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(_:issuppressed:)-44y21","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(_:issuppressed:)-8zjkq","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogconfirmationlabel(_:)-8vy8m","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogconfirmationlabel(_:)-9yves","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogconfirmationlabel(_:)-tdb3","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogmessage(_:)-4sm8g","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogmessage(_:)-6ktpd","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogmessage(_:)-8hc4j","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1g5vx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5xwdn","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3sxpw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9war5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttype:oncompletion:)-63cl9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8f915","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7lxde","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-90fzl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporterfilenamelabel(_:)-1zwtk","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporterfilenamelabel(_:)-4hfdy","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileexporterfilenamelabel(_:)-9qk6f","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedobject(_:)-204e","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedobject(_:)-5qphi","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedsceneobject(_:)-1pf62","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedsceneobject(_:)-7ydcd","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedscenevalue(_:_:)-409k5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedscenevalue(_:_:)-5rslv","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedvalue(_:_:)-2tfpq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/focusedvalue(_:_:)-5ekju","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/help(_:)-41m7f","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/help(_:)-52ocv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/help(_:)-6alg7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listitemtint(_:)-2oghk","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listitemtint(_:)-jsmy","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionspacing(_:)-7bolv","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/listsectionspacing(_:)-9rvpy","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:)-2z4to","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:)-3gfxu","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:)-6diqc","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:displaymode:)-102fi","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:displaymode:)-95t2d","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitle(_:displaymode:)-r633","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:)-199d2","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:)-5id2e","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-1aoy2","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-4o11w","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-6npmw","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationdocument(_:preview:)-zewz","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-18mwd","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-1fmh2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-7dwi6","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-7j747","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationtitle(_:)-7rd5d","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onchange(of:initial:_:)-5lz5g","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onchange(of:initial:_:)-8mv3q","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:delegate:)-32vet","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:delegate:)-6y04a","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-16b5b","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-5do0f","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-6qo7q","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ondrop(of:istargeted:perform:)-7i8u8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/padding(_:)-8enkj","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/padding(_:)-9masv","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/renameaction(_:)-smkd","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/renameaction(_:)-w0s8","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareainset(edge:alignment:spacing:content:)-51aw6","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareainset(edge:alignment:spacing:content:)-8jbaw","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareapadding(_:)-1u7z9","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareapadding(_:)-6uap1","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaleeffect(_:anchor:)-8fldn","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaleeffect(_:anchor:)-hnl6","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1s6d6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3h8h5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-52d7o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:placement:prompt:token:)-6v65","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:placement:prompt:token:)-79npk","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:editabletokens:placement:prompt:token:)-7hym9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:ispresented:placement:prompt:)-38onc","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:ispresented:placement:prompt:)-69qtp","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:ispresented:placement:prompt:)-7qezn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:)-1mt9z","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:)-3be1o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:)-7ymaq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:suggestions:)-4sxkw","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:suggestions:)-51woy","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:placement:prompt:suggestions:)-7ba54","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:ispresented:placement:prompt:token:)-3hkkf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:ispresented:placement:prompt:token:)-8356p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:ispresented:placement:prompt:token:)-8l3q","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:placement:prompt:token:)-19pi","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:placement:prompt:token:)-425ox","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:placement:prompt:token:)-7r6yq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5cyba","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6g16a","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8piih","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9rmj7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9tk4b","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-wjla","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditor\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(content:)-2w5kw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(content:)-6lcdp","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarbackground(_:for:)-1mr20","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarbackground(_:for:)-3zn0z","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typeselectequivalent(_:)-3d0hy","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typeselectequivalent(_:)-54mqc","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typeselectequivalent(_:)-9q2vy","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typesettinglanguage(_:isenabled:)-1rgrq","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/typesettinglanguage(_:isenabled:)-22bh3","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditor\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationeditor\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationeditor","title":"SegmentationEditor","type":"struct"},{"title":"Programmatic UIImage segmentation","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentor\/init(for:maxholes:)","title":"init?(for: UIImage, maxHoles: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentor\/image","title":"let image: UIImage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentor\/processimage()","title":"func processImage() async throws","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentor\/segmentation(for:)","title":"func segmentation(for: SegmentationInput) async throws -> Segmentation","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentor\/prepare()","title":"static func prepare()","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentor","title":"Segmentor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/init(positive:negative:box:)","title":"init(positive: [CGPoint], negative: [CGPoint], box: CGRect?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/box","title":"var box: CGRect?","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/negative","title":"var negative: [CGPoint]","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/positive","title":"var positive: [CGPoint]","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/toomanypoints","title":"var tooManyPoints: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/applying(_:)","title":"func applying(CGAffineTransform) -> SegmentationInput","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationinput\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/edgesegmentation\/segmentationinput\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationinput","title":"SegmentationInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentation\/init(core:image:)","title":"init(core: CoreSegmentation, image: UIImage)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentation\/core","title":"let core: CoreSegmentation","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentation\/image","title":"let image: UIImage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentation\/croppedsegmentation()","title":"func croppedSegmentation() -> CroppedSegmentation?","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentation\/fullpath(width:height:)","title":"func fullPath(width: CGFloat, height: CGFloat) -> CGPath","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentation\/holes(width:height:)","title":"func holes(width: CGFloat, height: CGFloat) -> [CGPath]","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentation\/mainpath(width:height:)","title":"func mainPath(width: CGFloat, height: CGFloat) -> CGPath","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/edgesegmentation\/segmentation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentation","title":"Segmentation","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/croppedsegmentation\/boundingboxinsourceimage","title":"let boundingBoxInSourceImage: CGRect","type":"property"},{"path":"\/documentation\/edgesegmentation\/croppedsegmentation\/image","title":"let image: UIImage","type":"property"}],"path":"\/documentation\/edgesegmentation\/croppedsegmentation","title":"CroppedSegmentation","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/uikitcoordinates\/fromcoregraphics(image:)","title":"static func fromCoreGraphics(image: UIImage) -> CGAffineTransform","type":"method"},{"path":"\/documentation\/edgesegmentation\/uikitcoordinates\/tocoregraphics(image:)","title":"static func toCoreGraphics(image: UIImage) -> CGAffineTransform","type":"method"},{"path":"\/documentation\/edgesegmentation\/uikitcoordinates\/touporientation(from:)","title":"static func toUpOrientation(from: UIImage) -> CGAffineTransform","type":"method"},{"path":"\/documentation\/edgesegmentation\/uikitcoordinates\/uporientedto(image:)","title":"static func upOrientedTo(image: UIImage) -> CGAffineTransform","type":"method"}],"path":"\/documentation\/edgesegmentation\/uikitcoordinates","title":"UIKitCoordinates","type":"enum"},{"title":"SwiftUI components","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/init(image:contentmode:zoomenabled:maxzoomscale:draggablesegmentation:segmentation:overlayconfiguration:content:)","title":"init(image: UIImage, contentMode: ContentMode, zoomEnabled: Bool, maxZoomScale: CGFloat, draggableSegmentation: Bool, segmentation: Segmentation?, overlayConfiguration: SegmentationOverlayConfiguration<OverlayFill, OverlayStroke>, content: (ImageGeometry, _ zoomScale: CGFloat) -> Content)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(activationpoint:)-3upyu","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(activationpoint:)-4e7aw","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(named:_:)-46kje","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(named:_:)-89bnq","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(named:_:)-8z851","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityactivationpoint(_:)-1uxyb","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityactivationpoint(_:)-55m3x","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-3g2o","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-51ai3","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-5ofbh","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-63jxv","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-647e8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-7o1a4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-8c67c","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-8xfi4","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhint(_:)-1lgjn","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhint(_:)-2of8l","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhint(_:)-8jbuk","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityinputlabels(_:)-18k8z","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityinputlabels(_:)-4gad3","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityinputlabels(_:)-5nlb2","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabel(_:)-170u6","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabel(_:)-17ckk","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabel(_:)-83qfb","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-198yb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-1duk1","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-4qn45","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-6wb6k","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1fndm","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-24fez","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4cm2v","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6z3i4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-2bcv1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-4fmvo","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-6aak4","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-92ldg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-3buiv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-6upa1","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-7d7ks","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-9qth0","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityvalue(_:)-4r3cj","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityvalue(_:)-5ez85","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityvalue(_:)-8fs1s","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:)-39f8j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:)-3bori","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:)-5q7j3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:message:)-37yfo","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:message:)-3pm3d","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:message:)-9kdri","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:)-2vgb4","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:)-3ke4a","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:)-8r435","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:message:)-1cw1p","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:message:)-2a3ms","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:message:)-8m232","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alignmentguide(_:computevalue:)-1xbdf","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alignmentguide(_:computevalue:)-9zkek","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/aspectratio(_:contentmode:)-4986z","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/aspectratio(_:contentmode:)-5tafy","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:in:fillstyle:)-9fybz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:in:fillstyle:)-eber","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(in:fillstyle:)-8gz3a","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(in:fillstyle:)-enaw","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-27fco","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-35fqn","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-3vixj","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-4kd1n","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonstyle(_:)-3632k","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonstyle(_:)-pdvv","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-14b3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1bs9i","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2oubx","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3lrsw","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6ypl9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9vkbz","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2dcv1","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-41zh3","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8md7z","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-44n9z","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6i9cf","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7sgj4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentmargins(_:_:for:)-18kfn","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentmargins(_:_:for:)-2etth","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(_:issuppressed:)-3i266","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(_:issuppressed:)-52msh","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(_:issuppressed:)-66y7k","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogconfirmationlabel(_:)-3wxpt","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogconfirmationlabel(_:)-48rhz","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogconfirmationlabel(_:)-78vf9","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogmessage(_:)-3q55g","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogmessage(_:)-7a9rd","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogmessage(_:)-9j96p","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3bvmh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5q23u","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4y1or","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7twxv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8vhj5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9829d","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3qnex","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9kfd7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporterfilenamelabel(_:)-19b9v","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporterfilenamelabel(_:)-6qqi","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporterfilenamelabel(_:)-tzmv","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedobject(_:)-5fi9g","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedobject(_:)-9c9kc","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedsceneobject(_:)-7ayn1","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedsceneobject(_:)-8erf7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedscenevalue(_:_:)-54bo9","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedscenevalue(_:_:)-8524h","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedvalue(_:_:)-5429y","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedvalue(_:_:)-5jnp9","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/help(_:)-1cyzi","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/help(_:)-1jxwe","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/help(_:)-8gjq0","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listitemtint(_:)-9ff3o","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listitemtint(_:)-hzh3","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionspacing(_:)-6ccuw","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionspacing(_:)-8r3yx","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:)-2v9lq","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:)-7480z","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:)-8iqrw","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:displaymode:)-36mk9","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:displaymode:)-4en3h","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:displaymode:)-4vmr","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:)-8xtsq","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:)-lv72","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-119ip","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-1lx78","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-5a371","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-9i5hi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-170mu","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-3qfj5","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-56wj2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-78pi1","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-8x5bh","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onchange(of:initial:_:)-43usp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onchange(of:initial:_:)-76f6f","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:delegate:)-5ye8b","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:delegate:)-9x65a","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-69jk1","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-78qgr","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-795fn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-7xjhi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/padding(_:)-408wy","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/padding(_:)-7oos3","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/renameaction(_:)-1pcpu","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/renameaction(_:)-5k3wy","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareainset(edge:alignment:spacing:content:)-3e9bb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareainset(edge:alignment:spacing:content:)-pfyk","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareapadding(_:)-51365","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareapadding(_:)-73r17","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaleeffect(_:anchor:)-5zy1w","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaleeffect(_:anchor:)-78qfz","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1gnef","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1r4zp","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6akdv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:placement:prompt:token:)-6y71j","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:placement:prompt:token:)-7z56d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:placement:prompt:token:)-909dw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:ispresented:placement:prompt:)-6ff5m","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:ispresented:placement:prompt:)-823qf","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:ispresented:placement:prompt:)-8mc3z","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:)-27nby","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:)-4aow4","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:)-51jkq","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:suggestions:)-8epv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:suggestions:)-9ips7","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:suggestions:)-9oout","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2f92e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2t0v3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6vtny","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:placement:prompt:token:)-5yuz5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:placement:prompt:token:)-630vp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:placement:prompt:token:)-9ipin","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-25zj4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-35dpd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4j92b","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6hye3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-888hh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9i0k1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(content:)-1lmx7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(content:)-6lhbh","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarbackground(_:for:)-4wrai","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarbackground(_:for:)-94zl2","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typeselectequivalent(_:)-28my7","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typeselectequivalent(_:)-82c7u","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typeselectequivalent(_:)-8tlzp","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typesettinglanguage(_:isenabled:)-3t89p","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typesettinglanguage(_:isenabled:)-67wvt","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(activationpoint:)-3upyu","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(activationpoint:)-4e7aw","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(named:_:)-46kje","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(named:_:)-89bnq","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaction(named:_:)-8z851","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityactivationpoint(_:)-1uxyb","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityactivationpoint(_:)-55m3x","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-3g2o","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-51ai3","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-5ofbh","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-63jxv","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-647e8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-7o1a4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-8c67c","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitycustomcontent(_:_:importance:)-8xfi4","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhint(_:)-1lgjn","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhint(_:)-2of8l","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityhint(_:)-8jbuk","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityinputlabels(_:)-18k8z","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityinputlabels(_:)-4gad3","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityinputlabels(_:)-5nlb2","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabel(_:)-170u6","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabel(_:)-17ckk","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabel(_:)-83qfb","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-198yb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-1duk1","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-4qn45","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:)-6wb6k","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1fndm","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-24fez","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4cm2v","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6z3i4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-2bcv1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-4fmvo","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-6aak4","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:entries:entrylabel:)-92ldg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-3buiv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-6upa1","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-7d7ks","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotor(_:textranges:)-9qth0","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityvalue(_:)-4r3cj","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityvalue(_:)-5ez85","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityvalue(_:)-8fs1s","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:)-39f8j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:)-3bori","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:)-5q7j3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:message:)-37yfo","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:message:)-3pm3d","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:actions:message:)-9kdri","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:)-2vgb4","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:)-3ke4a","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:)-8r435","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:message:)-1cw1p","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:message:)-2a3ms","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(_:ispresented:presenting:actions:message:)-8m232","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alignmentguide(_:computevalue:)-1xbdf","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alignmentguide(_:computevalue:)-9zkek","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/aspectratio(_:contentmode:)-4986z","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/aspectratio(_:contentmode:)-5tafy","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:in:fillstyle:)-9fybz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(_:in:fillstyle:)-eber","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(in:fillstyle:)-8gz3a","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/background(in:fillstyle:)-enaw","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-27fco","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-35fqn","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-3vixj","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badge(_:)-4kd1n","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonstyle(_:)-3632k","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/buttonstyle(_:)-pdvv","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-14b3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1bs9i","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2oubx","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3lrsw","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6ypl9","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9vkbz","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2dcv1","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-41zh3","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8md7z","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-44n9z","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6i9cf","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7sgj4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentmargins(_:_:for:)-18kfn","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentmargins(_:_:for:)-2etth","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(_:issuppressed:)-3i266","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(_:issuppressed:)-52msh","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(_:issuppressed:)-66y7k","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogconfirmationlabel(_:)-3wxpt","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogconfirmationlabel(_:)-48rhz","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogconfirmationlabel(_:)-78vf9","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogmessage(_:)-3q55g","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogmessage(_:)-7a9rd","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogmessage(_:)-9j96p","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3bvmh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5q23u","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4y1or","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7twxv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8vhj5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9829d","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3qnex","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9kfd7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporterfilenamelabel(_:)-19b9v","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporterfilenamelabel(_:)-6qqi","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileexporterfilenamelabel(_:)-tzmv","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedobject(_:)-5fi9g","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedobject(_:)-9c9kc","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedsceneobject(_:)-7ayn1","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedsceneobject(_:)-8erf7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedscenevalue(_:_:)-54bo9","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedscenevalue(_:_:)-8524h","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedvalue(_:_:)-5429y","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/focusedvalue(_:_:)-5jnp9","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/help(_:)-1cyzi","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/help(_:)-1jxwe","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/help(_:)-8gjq0","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listitemtint(_:)-9ff3o","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listitemtint(_:)-hzh3","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionspacing(_:)-6ccuw","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/listsectionspacing(_:)-8r3yx","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:)-2v9lq","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:)-7480z","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:)-8iqrw","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:displaymode:)-36mk9","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:displaymode:)-4en3h","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitle(_:displaymode:)-4vmr","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:)-8xtsq","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:)-lv72","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-119ip","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-1lx78","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-5a371","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationdocument(_:preview:)-9i5hi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-170mu","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-3qfj5","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-56wj2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-78pi1","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationtitle(_:)-8x5bh","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onchange(of:initial:_:)-43usp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onchange(of:initial:_:)-76f6f","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:delegate:)-5ye8b","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:delegate:)-9x65a","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-69jk1","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-78qgr","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-795fn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ondrop(of:istargeted:perform:)-7xjhi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/padding(_:)-408wy","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/padding(_:)-7oos3","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/renameaction(_:)-1pcpu","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/renameaction(_:)-5k3wy","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareainset(edge:alignment:spacing:content:)-3e9bb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareainset(edge:alignment:spacing:content:)-pfyk","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareapadding(_:)-51365","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareapadding(_:)-73r17","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaleeffect(_:anchor:)-5zy1w","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaleeffect(_:anchor:)-78qfz","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1gnef","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1r4zp","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6akdv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:placement:prompt:token:)-6y71j","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:placement:prompt:token:)-7z56d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:editabletokens:placement:prompt:token:)-909dw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:ispresented:placement:prompt:)-6ff5m","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:ispresented:placement:prompt:)-823qf","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:ispresented:placement:prompt:)-8mc3z","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:)-27nby","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:)-4aow4","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:)-51jkq","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:suggestions:)-8epv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:suggestions:)-9ips7","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:placement:prompt:suggestions:)-9oout","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2f92e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2t0v3","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6vtny","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:placement:prompt:token:)-5yuz5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:placement:prompt:token:)-630vp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:placement:prompt:token:)-9ipin","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-25zj4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-35dpd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4j92b","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6hye3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-888hh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9i0k1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(content:)-1lmx7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(content:)-6lhbh","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarbackground(_:for:)-4wrai","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarbackground(_:for:)-94zl2","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typeselectequivalent(_:)-28my7","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typeselectequivalent(_:)-82c7u","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typeselectequivalent(_:)-8tlzp","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typesettinglanguage(_:isenabled:)-3t89p","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/typesettinglanguage(_:isenabled:)-67wvt","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationview","title":"SegmentationView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/init(coordinator:contentmode:zoomenabled:maxzoomscale:draggablesegmentation:overlayconfiguration:editionconfiguration:)","title":"init(coordinator: SegmentationCoordinator, contentMode: ContentMode, zoomEnabled: Bool, maxZoomScale: CGFloat, draggableSegmentation: Bool, overlayConfiguration: SegmentationOverlayConfiguration<OverlayFill, OverlayStroke>, editionConfiguration: SegmentationEditionConfiguration<PositivePoint, NegativePoint, Box, BoxTrash>)","type":"init"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/init(image:contentmode:zoomenabled:maxzoomscale:draggablesegmentation:segmentation:overlayconfiguration:segmentationinput:editionhandlers:editionconfiguration:)","title":"init(image: UIImage, contentMode: ContentMode, zoomEnabled: Bool, maxZoomScale: CGFloat, draggableSegmentation: Bool, segmentation: Segmentation?, overlayConfiguration: SegmentationOverlayConfiguration<OverlayFill, OverlayStroke>, segmentationInput: SegmentationInput, editionHandlers: SegmentationEditionHandlers, editionConfiguration: SegmentationEditionConfiguration<PositivePoint, NegativePoint, Box, BoxTrash>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(activationpoint:)-6ej2c","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(activationpoint:)-oqtn","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(named:_:)-1fp56","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(named:_:)-5bzmb","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(named:_:)-9pfa6","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityactivationpoint(_:)-1igel","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityactivationpoint(_:)-84j4t","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-1n68j","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-2ufb9","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-3ekdc","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-4v0hu","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-5ofu1","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-70i2c","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-9d032","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-c44y","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhint(_:)-2e14b","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhint(_:)-44kyw","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhint(_:)-9copw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityinputlabels(_:)-1oh7g","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityinputlabels(_:)-7hpcy","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityinputlabels(_:)-9ak86","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabel(_:)-1j7s2","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabel(_:)-3ovza","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabel(_:)-8kk7q","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-3k1n3","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-5cfyj","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-5wl0h","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-7ufsn","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-42ugf","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6qpr7","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-92bmg","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9cgoo","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-1k4zk","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-36v87","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-4pxkk","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-552uz","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-53ey5","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-5v17o","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-7jzlz","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-v8nb","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityvalue(_:)-218vz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityvalue(_:)-9d37k","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityvalue(_:)-9hh9b","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:)-17qa2","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:)-2uot3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:)-4dog8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:message:)-21xrl","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:message:)-2snrb","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:message:)-6c9gl","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:)-7hogm","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:)-7tlez","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:)-9r57x","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-10eof","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-126e8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-6uxrj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alignmentguide(_:computevalue:)-8vsi2","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alignmentguide(_:computevalue:)-d6c4","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/aspectratio(_:contentmode:)-1q80i","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/aspectratio(_:contentmode:)-9e47v","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:in:fillstyle:)-6q7ng","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:in:fillstyle:)-m3q5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(in:fillstyle:)-6p9el","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(in:fillstyle:)-7ee6o","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-1urnf","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-6abs","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-79pfc","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-8fagg","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonstyle(_:)-3mi8t","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonstyle(_:)-5ffo1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3zk2p","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5vovk","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-gqv3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-55shx","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6my3x","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8fanx","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4g51e","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5agjh","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5e6t3","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4jnzd","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-55blp","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8fre4","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentmargins(_:_:for:)-1870m","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentmargins(_:_:for:)-2dx6j","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-3hl83","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-4hkfs","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-gfx1","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogconfirmationlabel(_:)-36pw5","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogconfirmationlabel(_:)-5l84p","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogconfirmationlabel(_:)-5u652","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogmessage(_:)-5bgz6","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogmessage(_:)-9ktt9","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogmessage(_:)-grhj","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1ujsp","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9w2d6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-27ny4","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2bqxc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3so89","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4slp2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-48368","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9hwfj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporterfilenamelabel(_:)-1f317","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporterfilenamelabel(_:)-6b6fp","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporterfilenamelabel(_:)-8gttx","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedobject(_:)-2za5g","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedobject(_:)-6060s","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedsceneobject(_:)-75gf7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedsceneobject(_:)-z1wy","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedscenevalue(_:_:)-5r1o7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedscenevalue(_:_:)-7dvep","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedvalue(_:_:)-1ev6b","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedvalue(_:_:)-5l12h","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/help(_:)-1lg6z","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/help(_:)-4jozj","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/help(_:)-5g1qo","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listitemtint(_:)-92wst","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listitemtint(_:)-9vt42","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionspacing(_:)-1ceuf","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionspacing(_:)-69kp9","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:)-62xz7","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:)-6zzfx","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:)-qc55","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:displaymode:)-3zleg","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:displaymode:)-53u86","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:displaymode:)-557z7","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:)-2tfpw","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:)-5iw2d","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-1ihx9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-1qauf","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-67mni","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-8roi9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-12kvq","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-1xqm7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-34wgq","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-6vpjr","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-oamg","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onchange(of:initial:_:)-8w068","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onchange(of:initial:_:)-9y2vo","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:delegate:)-3prnx","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:delegate:)-9p12z","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-4l9af","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-4xs0t","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-5tmpe","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-6ri9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/padding(_:)-2l8z6","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/padding(_:)-6rooc","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/renameaction(_:)-5886y","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/renameaction(_:)-wvti","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-1z9tb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-62uvo","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareapadding(_:)-5v1hq","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareapadding(_:)-9n6tw","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaleeffect(_:anchor:)-1h924","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaleeffect(_:anchor:)-3oguq","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5sm3d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6329l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-75jq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-2hck8","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-460o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-8jp79","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:ispresented:placement:prompt:)-39abv","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:ispresented:placement:prompt:)-3afxx","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:ispresented:placement:prompt:)-5dhgt","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:)-10934","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:)-532kn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:)-7xu18","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:suggestions:)-6aetk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:suggestions:)-8vifq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:suggestions:)-8xfwi","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4jkqv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6bgfr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-94nn6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-7d15t","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-9jte1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-9kik0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5s2sc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-634tv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-si3j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1mmvm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4uyin","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-97b51","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(content:)-1ytwu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(content:)-80sav","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarbackground(_:for:)-7vhz7","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarbackground(_:for:)-u1dk","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typeselectequivalent(_:)-2q4ek","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typeselectequivalent(_:)-3ebhg","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typeselectequivalent(_:)-3laqz","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typesettinglanguage(_:isenabled:)-4zr12","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typesettinglanguage(_:isenabled:)-70rps","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(activationpoint:)-6ej2c","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(activationpoint:)-oqtn","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(named:_:)-1fp56","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(named:_:)-5bzmb","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaction(named:_:)-9pfa6","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityactivationpoint(_:)-1igel","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityactivationpoint(_:)-84j4t","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-1n68j","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-2ufb9","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-3ekdc","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-4v0hu","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-5ofu1","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-70i2c","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-9d032","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-c44y","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhint(_:)-2e14b","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhint(_:)-44kyw","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityhint(_:)-9copw","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityinputlabels(_:)-1oh7g","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityinputlabels(_:)-7hpcy","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityinputlabels(_:)-9ak86","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabel(_:)-1j7s2","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabel(_:)-3ovza","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabel(_:)-8kk7q","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-3k1n3","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-5cfyj","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-5wl0h","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:)-7ufsn","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-42ugf","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6qpr7","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-92bmg","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9cgoo","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-1k4zk","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-36v87","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-4pxkk","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-552uz","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-53ey5","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-5v17o","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-7jzlz","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotor(_:textranges:)-v8nb","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityvalue(_:)-218vz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityvalue(_:)-9d37k","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityvalue(_:)-9hh9b","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:)-17qa2","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:)-2uot3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:)-4dog8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:message:)-21xrl","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:message:)-2snrb","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:actions:message:)-6c9gl","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:)-7hogm","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:)-7tlez","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:)-9r57x","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-10eof","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-126e8","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-6uxrj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alignmentguide(_:computevalue:)-8vsi2","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alignmentguide(_:computevalue:)-d6c4","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/aspectratio(_:contentmode:)-1q80i","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/aspectratio(_:contentmode:)-9e47v","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:in:fillstyle:)-6q7ng","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(_:in:fillstyle:)-m3q5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(in:fillstyle:)-6p9el","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/background(in:fillstyle:)-7ee6o","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-1urnf","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-6abs","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-79pfc","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badge(_:)-8fagg","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonstyle(_:)-3mi8t","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/buttonstyle(_:)-5ffo1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3zk2p","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5vovk","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-gqv3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-55shx","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6my3x","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8fanx","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4g51e","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5agjh","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5e6t3","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4jnzd","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-55blp","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8fre4","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentmargins(_:_:for:)-1870m","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentmargins(_:_:for:)-2dx6j","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-3hl83","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-4hkfs","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-gfx1","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogconfirmationlabel(_:)-36pw5","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogconfirmationlabel(_:)-5l84p","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogconfirmationlabel(_:)-5u652","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogmessage(_:)-5bgz6","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogmessage(_:)-9ktt9","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogmessage(_:)-grhj","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1ujsp","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9w2d6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-27ny4","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2bqxc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3so89","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4slp2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-48368","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9hwfj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporterfilenamelabel(_:)-1f317","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporterfilenamelabel(_:)-6b6fp","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileexporterfilenamelabel(_:)-8gttx","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedobject(_:)-2za5g","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedobject(_:)-6060s","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedsceneobject(_:)-75gf7","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedsceneobject(_:)-z1wy","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedscenevalue(_:_:)-5r1o7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedscenevalue(_:_:)-7dvep","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedvalue(_:_:)-1ev6b","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/focusedvalue(_:_:)-5l12h","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/help(_:)-1lg6z","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/help(_:)-4jozj","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/help(_:)-5g1qo","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listitemtint(_:)-92wst","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listitemtint(_:)-9vt42","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionspacing(_:)-1ceuf","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/listsectionspacing(_:)-69kp9","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:)-62xz7","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:)-6zzfx","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:)-qc55","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:displaymode:)-3zleg","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:displaymode:)-53u86","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitle(_:displaymode:)-557z7","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:)-2tfpw","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:)-5iw2d","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-1ihx9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-1qauf","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-67mni","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationdocument(_:preview:)-8roi9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-12kvq","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-1xqm7","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-34wgq","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-6vpjr","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationtitle(_:)-oamg","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onchange(of:initial:_:)-8w068","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onchange(of:initial:_:)-9y2vo","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:delegate:)-3prnx","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:delegate:)-9p12z","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-4l9af","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-4xs0t","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-5tmpe","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ondrop(of:istargeted:perform:)-6ri9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/padding(_:)-2l8z6","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/padding(_:)-6rooc","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/renameaction(_:)-5886y","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/renameaction(_:)-wvti","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-1z9tb","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-62uvo","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareapadding(_:)-5v1hq","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareapadding(_:)-9n6tw","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaleeffect(_:anchor:)-1h924","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaleeffect(_:anchor:)-3oguq","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5sm3d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6329l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-75jq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-2hck8","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-460o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-8jp79","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:ispresented:placement:prompt:)-39abv","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:ispresented:placement:prompt:)-3afxx","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:ispresented:placement:prompt:)-5dhgt","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:)-10934","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:)-532kn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:)-7xu18","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:suggestions:)-6aetk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:suggestions:)-8vifq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:placement:prompt:suggestions:)-8xfwi","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4jkqv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6bgfr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-94nn6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-7d15t","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-9jte1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-9kik0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5s2sc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-634tv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-si3j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1mmvm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4uyin","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-97b51","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(content:)-1ytwu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(content:)-80sav","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarbackground(_:for:)-7vhz7","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarbackground(_:for:)-u1dk","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typeselectequivalent(_:)-2q4ek","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typeselectequivalent(_:)-3ebhg","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typeselectequivalent(_:)-3laqz","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typesettinglanguage(_:isenabled:)-4zr12","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/typesettinglanguage(_:isenabled:)-70rps","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationeditorview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationeditorview","title":"SegmentationEditorView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/init(image:maxholes:)","title":"init?(image: UIImage, maxHoles: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/editionhandlers","title":"var editionHandlers: SegmentationEditionHandlers","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/embeddingscomputationresult","title":"var embeddingsComputationResult: Result<Void, Error>?","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/image","title":"var image: UIImage","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/input","title":"var input: SegmentationInput","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/segmentation","title":"var segmentation: Segmentation?","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/segmentationerror","title":"var segmentationError: Error?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/edgesegmentation\/segmentationcoordinator\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationcoordinator","title":"SegmentationCoordinator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/init(coordinator:contentmode:zoomenabled:maxzoomscale:draggablesegmentation:overlayconfiguration:editionconfiguration:errorview:segmentation:input:)","title":"init(coordinator: SegmentationCoordinator, contentMode: ContentMode, zoomEnabled: Bool, maxZoomScale: CGFloat, draggableSegmentation: Bool, overlayConfiguration: SegmentationOverlayConfiguration<OverlayFill, OverlayStroke>, editionConfiguration: SegmentationEditionConfiguration<PositivePoint, NegativePoint, Box, BoxTrash>, errorView: (Error) -> ErrorView, segmentation: Binding<Segmentation?>?, input: Binding<SegmentationInput>?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(activationpoint:)-9uyqj","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(activationpoint:)-9yto8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(named:_:)-1hr3k","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(named:_:)-93idu","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(named:_:)-ayr5","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityactivationpoint(_:)-2tw0h","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityactivationpoint(_:)-6beol","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-1ysei","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-31962","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-4miz6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-68o1c","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-7t37t","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-8v1d2","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-sl9g","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-y4sg","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhint(_:)-7qlcc","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhint(_:)-8bzme","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhint(_:)-bd7a","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityinputlabels(_:)-2cdfk","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityinputlabels(_:)-48pqn","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityinputlabels(_:)-5h1oa","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabel(_:)-3fdd0","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabel(_:)-3p44l","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabel(_:)-58bio","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-46831","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-6zsda","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-85ipm","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-8dj7n","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4ildk","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-707b","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7t3h6","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8psc6","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-6254u","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-8mmh6","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-8pa4q","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-ae0j","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-16oqf","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-2gk2q","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-94zvh","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-9ym4r","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityvalue(_:)-6k2lh","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityvalue(_:)-6l9dz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityvalue(_:)-9gg1k","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:)-1kixn","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:)-2j9i0","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:)-wl3w","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:message:)-1jfcl","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:message:)-7krur","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:message:)-8hesq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:)-2c6lp","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:)-4amhe","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:)-4xqyr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-4wlqt","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-5x9c9","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-6lyz6","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alignmentguide(_:computevalue:)-2vxve","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alignmentguide(_:computevalue:)-6rooh","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/aspectratio(_:contentmode:)-37oqo","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/aspectratio(_:contentmode:)-6bh45","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:in:fillstyle:)-1u5xy","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:in:fillstyle:)-4m0wt","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(in:fillstyle:)-15orf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(in:fillstyle:)-5b0ws","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-21ony","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-3psh7","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-48r8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-pcli","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonstyle(_:)-7fnfl","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonstyle(_:)-9yd1n","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1v9bm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-67j4g","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8fxph","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1cqi2","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3qvtb","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4qsqc","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-22s3b","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3panu","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6scjj","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-24m0e","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2pay5","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5qryf","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentmargins(_:_:for:)-7jmcg","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentmargins(_:_:for:)-9vhya","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-3hoau","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-5i98g","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-6hoq","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogconfirmationlabel(_:)-1nmcg","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogconfirmationlabel(_:)-96780","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogconfirmationlabel(_:)-9lfbr","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogmessage(_:)-5n0uo","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogmessage(_:)-5zujd","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogmessage(_:)-8npav","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3xrhf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6xttx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1ehr0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6jv0j","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4xcy3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7p5s5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4opog","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-56nec","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporterfilenamelabel(_:)-5zs55","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporterfilenamelabel(_:)-7q4gf","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporterfilenamelabel(_:)-8xbwd","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedobject(_:)-1pbow","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedobject(_:)-6u6p0","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedsceneobject(_:)-4fscz","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedsceneobject(_:)-5maeo","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedscenevalue(_:_:)-44q7o","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedscenevalue(_:_:)-4ei7c","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedvalue(_:_:)-2b9cw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedvalue(_:_:)-jqwu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/help(_:)-41xc7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/help(_:)-7fs6w","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/help(_:)-7orb2","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listitemtint(_:)-30bkk","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listitemtint(_:)-844bp","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionspacing(_:)-6ao0g","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionspacing(_:)-7f6r7","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:)-4s04x","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:)-5rt6v","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:)-81xgs","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:displaymode:)-3hvba","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:displaymode:)-6wd0e","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:displaymode:)-9aj2w","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:)-9bkeb","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:)-vtf7","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-1bhsk","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-4baif","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-9blm4","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-uezk","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-3gfia","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-3k6uf","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-49i2y","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-80cdm","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-81686","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onchange(of:initial:_:)-747fe","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onchange(of:initial:_:)-9bbqr","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:delegate:)-8r0iu","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:delegate:)-8z13n","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-1zrlm","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-6zs87","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-7ajxb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-8ytk6","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/padding(_:)-78dd5","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/padding(_:)-8uxh1","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/renameaction(_:)-2anip","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/renameaction(_:)-2sp6o","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-3snom","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-7lj4u","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareapadding(_:)-322nm","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareapadding(_:)-83dh","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaleeffect(_:anchor:)-71d9s","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaleeffect(_:anchor:)-77mxf","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5kl9s","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9rin","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-ml33","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-18evl","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-4e29e","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-8rl91","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:ispresented:placement:prompt:)-2n9gq","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:ispresented:placement:prompt:)-4epq6","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:ispresented:placement:prompt:)-4oawn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:)-6wmbd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:)-9fcb7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:)-9ynew","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:suggestions:)-273kn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:suggestions:)-3v9d0","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:suggestions:)-yjek","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4dxof","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-94b2s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9ok9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-2y6jp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-3rt7j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-7zvvr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3q6p2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-709rd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7ldgu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1sk72","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-83c7f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9dw22","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(content:)-1uc8w","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(content:)-4djuz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarbackground(_:for:)-7kx25","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarbackground(_:for:)-g7p9","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typeselectequivalent(_:)-6ujvm","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typeselectequivalent(_:)-7qir3","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typeselectequivalent(_:)-zla7","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typesettinglanguage(_:isenabled:)-2d1mf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typesettinglanguage(_:isenabled:)-2e6te","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(activationpoint:)-9uyqj","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(activationpoint:)-9yto8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(named:_:)-1hr3k","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(named:_:)-93idu","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaction(named:_:)-ayr5","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityactivationpoint(_:)-2tw0h","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityactivationpoint(_:)-6beol","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-1ysei","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-31962","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-4miz6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-68o1c","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-7t37t","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-8v1d2","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-sl9g","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitycustomcontent(_:_:importance:)-y4sg","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhint(_:)-7qlcc","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhint(_:)-8bzme","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityhint(_:)-bd7a","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityinputlabels(_:)-2cdfk","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityinputlabels(_:)-48pqn","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityinputlabels(_:)-5h1oa","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabel(_:)-3fdd0","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabel(_:)-3p44l","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabel(_:)-58bio","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-46831","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-6zsda","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-85ipm","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:)-8dj7n","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4ildk","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-707b","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7t3h6","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8psc6","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-6254u","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-8mmh6","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-8pa4q","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:entries:entrylabel:)-ae0j","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-16oqf","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-2gk2q","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-94zvh","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotor(_:textranges:)-9ym4r","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityvalue(_:)-6k2lh","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityvalue(_:)-6l9dz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityvalue(_:)-9gg1k","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:)-1kixn","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:)-2j9i0","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:)-wl3w","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:message:)-1jfcl","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:message:)-7krur","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:actions:message:)-8hesq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:)-2c6lp","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:)-4amhe","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:)-4xqyr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-4wlqt","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-5x9c9","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(_:ispresented:presenting:actions:message:)-6lyz6","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alignmentguide(_:computevalue:)-2vxve","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alignmentguide(_:computevalue:)-6rooh","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/aspectratio(_:contentmode:)-37oqo","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/aspectratio(_:contentmode:)-6bh45","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:in:fillstyle:)-1u5xy","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(_:in:fillstyle:)-4m0wt","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(in:fillstyle:)-15orf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/background(in:fillstyle:)-5b0ws","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-21ony","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-3psh7","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-48r8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badge(_:)-pcli","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonstyle(_:)-7fnfl","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/buttonstyle(_:)-9yd1n","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1v9bm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-67j4g","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8fxph","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1cqi2","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3qvtb","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4qsqc","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-22s3b","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3panu","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6scjj","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-24m0e","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2pay5","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5qryf","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentmargins(_:_:for:)-7jmcg","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentmargins(_:_:for:)-9vhya","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-3hoau","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-5i98g","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(_:issuppressed:)-6hoq","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogconfirmationlabel(_:)-1nmcg","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogconfirmationlabel(_:)-96780","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogconfirmationlabel(_:)-9lfbr","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogmessage(_:)-5n0uo","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogmessage(_:)-5zujd","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogmessage(_:)-8npav","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3xrhf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6xttx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1ehr0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6jv0j","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4xcy3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7p5s5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4opog","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-56nec","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporterfilenamelabel(_:)-5zs55","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporterfilenamelabel(_:)-7q4gf","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileexporterfilenamelabel(_:)-8xbwd","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedobject(_:)-1pbow","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedobject(_:)-6u6p0","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedsceneobject(_:)-4fscz","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedsceneobject(_:)-5maeo","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedscenevalue(_:_:)-44q7o","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedscenevalue(_:_:)-4ei7c","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedvalue(_:_:)-2b9cw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/focusedvalue(_:_:)-jqwu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/help(_:)-41xc7","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/help(_:)-7fs6w","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/help(_:)-7orb2","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listitemtint(_:)-30bkk","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listitemtint(_:)-844bp","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionspacing(_:)-6ao0g","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/listsectionspacing(_:)-7f6r7","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:)-4s04x","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:)-5rt6v","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:)-81xgs","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:displaymode:)-3hvba","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:displaymode:)-6wd0e","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitle(_:displaymode:)-9aj2w","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:)-9bkeb","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:)-vtf7","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-1bhsk","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-4baif","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-9blm4","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationdocument(_:preview:)-uezk","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-3gfia","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-3k6uf","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-49i2y","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-80cdm","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationtitle(_:)-81686","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onchange(of:initial:_:)-747fe","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onchange(of:initial:_:)-9bbqr","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:delegate:)-8r0iu","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:delegate:)-8z13n","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-1zrlm","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-6zs87","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-7ajxb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ondrop(of:istargeted:perform:)-8ytk6","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/padding(_:)-78dd5","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/padding(_:)-8uxh1","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/renameaction(_:)-2anip","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/renameaction(_:)-2sp6o","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-3snom","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareainset(edge:alignment:spacing:content:)-7lj4u","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareapadding(_:)-322nm","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareapadding(_:)-83dh","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaleeffect(_:anchor:)-71d9s","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaleeffect(_:anchor:)-77mxf","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5kl9s","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9rin","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-ml33","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-18evl","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-4e29e","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:editabletokens:placement:prompt:token:)-8rl91","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:ispresented:placement:prompt:)-2n9gq","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:ispresented:placement:prompt:)-4epq6","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:ispresented:placement:prompt:)-4oawn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:)-6wmbd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:)-9fcb7","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:)-9ynew","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:suggestions:)-273kn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:suggestions:)-3v9d0","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:placement:prompt:suggestions:)-yjek","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4dxof","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-94b2s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9ok9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-2y6jp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-3rt7j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:placement:prompt:token:)-7zvvr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3q6p2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-709rd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7ldgu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1sk72","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-83c7f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9dw22","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(content:)-1uc8w","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(content:)-4djuz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarbackground(_:for:)-7kx25","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarbackground(_:for:)-g7p9","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typeselectequivalent(_:)-6ujvm","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typeselectequivalent(_:)-7qir3","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typeselectequivalent(_:)-zla7","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typesettinglanguage(_:isenabled:)-2d1mf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/typesettinglanguage(_:isenabled:)-2e6te","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/coordinatedsegmentationeditorview","title":"CoordinatedSegmentationEditorView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/imagegeometry\/init(imagesize:imagedisplaysize:)","title":"init(imageSize: CGSize, imageDisplaySize: CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/imagegeometry\/imagedisplaysize","title":"let imageDisplaySize: CGSize","type":"property"},{"path":"\/documentation\/edgesegmentation\/imagegeometry\/imagesize","title":"let imageSize: CGSize","type":"property"},{"path":"\/documentation\/edgesegmentation\/imagegeometry\/imagetoview","title":"var imageToView: CGAffineTransform","type":"property"},{"path":"\/documentation\/edgesegmentation\/imagegeometry\/viewtoimage","title":"var viewToImage: CGAffineTransform","type":"property"}],"path":"\/documentation\/edgesegmentation\/imagegeometry","title":"ImageGeometry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/init(segmentation:imagegeometry:zoomscale:configuration:)","title":"init(segmentation: Segmentation, imageGeometry: ImageGeometry, zoomScale: CGFloat, configuration: SegmentationOverlayConfiguration<Fill, Stroke>)","type":"init"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/init(segmentation:imagegeometry:zoomscale:fill:stroke:strokestyle:)","title":"init(segmentation: Segmentation, imageGeometry: ImageGeometry, zoomScale: CGFloat, fill: Fill, stroke: Stroke, strokeStyle: StrokeStyle?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(activationpoint:)-6juwd","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(activationpoint:)-7039x","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(named:_:)-1va2r","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(named:_:)-73ird","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(named:_:)-inrz","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityactivationpoint(_:)-1dt76","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityactivationpoint(_:)-2zm98","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-2eobh","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-2o0cp","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-3ymhj","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-4h2e4","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-4jwa4","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-4ms2s","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-94s3p","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-9c7vg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhint(_:)-16xuc","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhint(_:)-3uorc","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhint(_:)-9dwoi","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityinputlabels(_:)-3qy48","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityinputlabels(_:)-6rl34","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityinputlabels(_:)-8w6lo","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabel(_:)-4vhkx","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabel(_:)-99hqz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabel(_:)-9m2w0","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-38kgn","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-4tkr0","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-78295","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-89je4","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-3g8so","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-40vmy","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-5mn7r","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-6m2xs","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-17egv","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-4fut6","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-7hl38","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-9pnm9","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-1xp68","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-4oqsh","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-4pnmw","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-7t9o4","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityvalue(_:)-3f0q5","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityvalue(_:)-8pa1c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityvalue(_:)-961pf","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:)-49j99","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:)-5yail","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:)-6thk","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:message:)-5597s","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:message:)-676xj","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:message:)-8gdy4","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:)-4kha1","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:)-vcue","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:)-xtaf","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:message:)-59af8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:message:)-78lxm","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:message:)-9w80y","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alignmentguide(_:computevalue:)-1bm5r","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alignmentguide(_:computevalue:)-7m4e5","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/aspectratio(_:contentmode:)-4a13c","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/aspectratio(_:contentmode:)-5gt34","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:in:fillstyle:)-3c0d4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:in:fillstyle:)-5rhbu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(in:fillstyle:)-3lg44","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(in:fillstyle:)-7ib6z","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-2ri1w","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-3d6fh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-4v00","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-972ab","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonstyle(_:)-6wog0","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonstyle(_:)-pwgn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qpu3","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2vvqn","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6h7az","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-49bsd","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zbit","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9huam","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5z5ci","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9hfvh","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9mp5z","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4fe44","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-74bmm","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8i9nq","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentmargins(_:_:for:)-3kdzi","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentmargins(_:_:for:)-9uq5t","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(_:issuppressed:)-1cga1","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(_:issuppressed:)-42xsm","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(_:issuppressed:)-8yfa5","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogconfirmationlabel(_:)-41nft","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogconfirmationlabel(_:)-5i83f","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogconfirmationlabel(_:)-8s2j4","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogmessage(_:)-99dl0","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogmessage(_:)-9rf1e","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogmessage(_:)-fnra","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8dqzd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-v9kf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-22gdd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-88juq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4g01n","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7db3i","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5s3d5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-70dp0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporterfilenamelabel(_:)-66he9","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporterfilenamelabel(_:)-66tki","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporterfilenamelabel(_:)-6lksz","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedobject(_:)-5fbgn","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedobject(_:)-6bpw8","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedsceneobject(_:)-465cy","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedsceneobject(_:)-5lmke","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedscenevalue(_:_:)-efpa","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedscenevalue(_:_:)-mfii","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedvalue(_:_:)-2k8iq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedvalue(_:_:)-5dt0z","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/help(_:)-2e53l","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/help(_:)-2mz47","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/help(_:)-8s152","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listitemtint(_:)-7ikuw","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listitemtint(_:)-9u2eh","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionspacing(_:)-42m6q","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionspacing(_:)-91wko","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:)-5lss5","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:)-7elg4","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:)-8xj3h","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:displaymode:)-1bh68","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:displaymode:)-1tiad","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:displaymode:)-9enms","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:)-3mjco","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:)-6qz0k","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-3er41","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-511wt","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-827n1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-9dsxc","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-4cxv0","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-60in5","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-75bhh","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-8du9e","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-oe67","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onchange(of:initial:_:)-1gj54","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onchange(of:initial:_:)-7l1l1","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/oncontinuoushover(coordinatespace:perform:)-1j97d","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/oncontinuoushover(coordinatespace:perform:)-4dal1","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:delegate:)-7ha7w","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:delegate:)-985q9","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-39lby","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-3i5jm","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-3njp2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-7i402","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ontapgesture(count:coordinatespace:perform:)-1zbm7","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ontapgesture(count:coordinatespace:perform:)-3278d","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/padding(_:)-5mn40","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/padding(_:)-9tx6m","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/renameaction(_:)-21gd5","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/renameaction(_:)-4goz9","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareainset(edge:alignment:spacing:content:)-3x11r","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareainset(edge:alignment:spacing:content:)-njdh","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareapadding(_:)-96woo","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareapadding(_:)-9wp8n","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaleeffect(_:anchor:)-4sg71","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaleeffect(_:anchor:)-5yq2u","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5e65n","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5uf2o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-83abj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:placement:prompt:token:)-62dr5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:placement:prompt:token:)-94rib","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:placement:prompt:token:)-iomr","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:ispresented:placement:prompt:)-3fu4i","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:ispresented:placement:prompt:)-7q3nk","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:ispresented:placement:prompt:)-gn4q","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:)-15ajd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:)-2sc29","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:)-84p1x","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:suggestions:)-5fxaw","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:suggestions:)-5vzs4","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:suggestions:)-8s2gt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-41o47","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-6t917","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-967xf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:placement:prompt:token:)-3bpup","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:placement:prompt:token:)-4jly","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:placement:prompt:token:)-lcka","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jq6j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3wmqw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ik35","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1v4i","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2b7vh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6m2tm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(content:)-4v1k4","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(content:)-643ns","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarbackground(_:for:)-1na82","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarbackground(_:for:)-51tdo","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typeselectequivalent(_:)-512av","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typeselectequivalent(_:)-65jav","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typeselectequivalent(_:)-84vr2","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typesettinglanguage(_:isenabled:)-3brkb","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typesettinglanguage(_:isenabled:)-9x97z","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(activationpoint:)-6juwd","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(activationpoint:)-7039x","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(named:_:)-1va2r","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(named:_:)-73ird","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaction(named:_:)-inrz","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityactivationpoint(_:)-1dt76","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityactivationpoint(_:)-2zm98","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-2eobh","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-2o0cp","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-3ymhj","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-4h2e4","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-4jwa4","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-4ms2s","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-94s3p","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitycustomcontent(_:_:importance:)-9c7vg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhint(_:)-16xuc","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhint(_:)-3uorc","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityhint(_:)-9dwoi","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityinputlabels(_:)-3qy48","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityinputlabels(_:)-6rl34","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityinputlabels(_:)-8w6lo","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabel(_:)-4vhkx","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabel(_:)-99hqz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabel(_:)-9m2w0","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-38kgn","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-4tkr0","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-78295","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:)-89je4","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-3g8so","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-40vmy","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-5mn7r","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-6m2xs","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-17egv","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-4fut6","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-7hl38","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:entries:entrylabel:)-9pnm9","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-1xp68","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-4oqsh","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-4pnmw","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotor(_:textranges:)-7t9o4","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityvalue(_:)-3f0q5","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityvalue(_:)-8pa1c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityvalue(_:)-961pf","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:)-49j99","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:)-5yail","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:)-6thk","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:message:)-5597s","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:message:)-676xj","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:actions:message:)-8gdy4","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:)-4kha1","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:)-vcue","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:)-xtaf","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:message:)-59af8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:message:)-78lxm","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(_:ispresented:presenting:actions:message:)-9w80y","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alignmentguide(_:computevalue:)-1bm5r","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alignmentguide(_:computevalue:)-7m4e5","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/aspectratio(_:contentmode:)-4a13c","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/aspectratio(_:contentmode:)-5gt34","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:in:fillstyle:)-3c0d4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(_:in:fillstyle:)-5rhbu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(in:fillstyle:)-3lg44","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/background(in:fillstyle:)-7ib6z","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-2ri1w","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-3d6fh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-4v00","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badge(_:)-972ab","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonstyle(_:)-6wog0","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/buttonstyle(_:)-pwgn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qpu3","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2vvqn","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6h7az","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-49bsd","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zbit","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9huam","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5z5ci","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9hfvh","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9mp5z","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4fe44","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-74bmm","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8i9nq","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentmargins(_:_:for:)-3kdzi","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentmargins(_:_:for:)-9uq5t","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(_:issuppressed:)-1cga1","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(_:issuppressed:)-42xsm","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(_:issuppressed:)-8yfa5","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogconfirmationlabel(_:)-41nft","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogconfirmationlabel(_:)-5i83f","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogconfirmationlabel(_:)-8s2j4","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogmessage(_:)-99dl0","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogmessage(_:)-9rf1e","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogmessage(_:)-fnra","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8dqzd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-v9kf","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-22gdd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-88juq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4g01n","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7db3i","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5s3d5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-70dp0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporterfilenamelabel(_:)-66he9","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporterfilenamelabel(_:)-66tki","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileexporterfilenamelabel(_:)-6lksz","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedobject(_:)-5fbgn","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedobject(_:)-6bpw8","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedsceneobject(_:)-465cy","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedsceneobject(_:)-5lmke","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedscenevalue(_:_:)-efpa","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedscenevalue(_:_:)-mfii","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedvalue(_:_:)-2k8iq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/focusedvalue(_:_:)-5dt0z","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/help(_:)-2e53l","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/help(_:)-2mz47","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/help(_:)-8s152","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listitemtint(_:)-7ikuw","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listitemtint(_:)-9u2eh","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionspacing(_:)-42m6q","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/listsectionspacing(_:)-91wko","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:)-5lss5","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:)-7elg4","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:)-8xj3h","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:displaymode:)-1bh68","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:displaymode:)-1tiad","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitle(_:displaymode:)-9enms","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:)-3mjco","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:)-6qz0k","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-3er41","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-511wt","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-827n1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationdocument(_:preview:)-9dsxc","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-4cxv0","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-60in5","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-75bhh","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-8du9e","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationtitle(_:)-oe67","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onchange(of:initial:_:)-1gj54","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onchange(of:initial:_:)-7l1l1","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/oncontinuoushover(coordinatespace:perform:)-1j97d","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/oncontinuoushover(coordinatespace:perform:)-4dal1","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:delegate:)-7ha7w","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:delegate:)-985q9","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-39lby","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-3i5jm","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-3njp2","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ondrop(of:istargeted:perform:)-7i402","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ontapgesture(count:coordinatespace:perform:)-1zbm7","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ontapgesture(count:coordinatespace:perform:)-3278d","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/padding(_:)-5mn40","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/padding(_:)-9tx6m","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/renameaction(_:)-21gd5","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/renameaction(_:)-4goz9","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareainset(edge:alignment:spacing:content:)-3x11r","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareainset(edge:alignment:spacing:content:)-njdh","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareapadding(_:)-96woo","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareapadding(_:)-9wp8n","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaleeffect(_:anchor:)-4sg71","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaleeffect(_:anchor:)-5yq2u","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5e65n","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5uf2o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-83abj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:placement:prompt:token:)-62dr5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:placement:prompt:token:)-94rib","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:editabletokens:placement:prompt:token:)-iomr","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:ispresented:placement:prompt:)-3fu4i","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:ispresented:placement:prompt:)-7q3nk","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:ispresented:placement:prompt:)-gn4q","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:)-15ajd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:)-2sc29","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:)-84p1x","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:suggestions:)-5fxaw","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:suggestions:)-5vzs4","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:placement:prompt:suggestions:)-8s2gt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-41o47","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-6t917","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-967xf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:placement:prompt:token:)-3bpup","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:placement:prompt:token:)-4jly","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:placement:prompt:token:)-lcka","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jq6j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3wmqw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ik35","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1v4i","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2b7vh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6m2tm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(content:)-4v1k4","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(content:)-643ns","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarbackground(_:for:)-1na82","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarbackground(_:for:)-51tdo","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typeselectequivalent(_:)-512av","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typeselectequivalent(_:)-65jav","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typeselectequivalent(_:)-84vr2","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typesettinglanguage(_:isenabled:)-3brkb","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/typesettinglanguage(_:isenabled:)-9x97z","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationoverlay\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationoverlay","title":"SegmentationOverlay","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/init(input:geometry:editionhandlers:segmentation:zoomscale:configuration:)","title":"init(input: SegmentationInput, geometry: ImageGeometry, editionHandlers: SegmentationEditionHandlers, segmentation: Segmentation?, zoomScale: CGFloat, configuration: SegmentationEditionConfiguration<PositivePoint, NegativePoint, Box, BoxTrash>)","type":"init"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/init(input:geometry:editionhandlers:zoomscale:positivepointview:negativepointview:boxview:boxtrashview:)","title":"init(input: SegmentationInput, geometry: ImageGeometry, editionHandlers: SegmentationEditionHandlers, zoomScale: CGFloat, positivePointView: (_ zoomScale: CGFloat) -> PositivePoint, negativePointView: (_ zoomScale: CGFloat) -> NegativePoint, boxView: (_ box: CGRect, _ drawing: Bool, _ zoomScale: CGFloat) -> Box, boxTrashView: (_ viewSize: CGSize, _ box: CGRect, _ zoomScale: CGFloat) -> BoxTrash)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(activationpoint:)-27tja","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(activationpoint:)-wjxh","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(named:_:)-9jx5z","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(named:_:)-gvux","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(named:_:)-zww2","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityactivationpoint(_:)-4mab7","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityactivationpoint(_:)-92xuf","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-1fqhn","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-2mcb0","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-3s2o7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-6mo30","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-7utvq","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-9dzu","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-9kuwp","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-9td1c","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhint(_:)-5chyr","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhint(_:)-9n320","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhint(_:)-m8ge","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityinputlabels(_:)-2hbo0","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityinputlabels(_:)-8ksah","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityinputlabels(_:)-cnq5","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabel(_:)-1nq6x","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabel(_:)-5o0e3","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabel(_:)-9ck3q","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-5f5pw","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-6vf21","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-8hqto","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-8qxfr","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-2g2od","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-4orr6","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-8pazp","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-9y9fm","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-3c4v3","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-4lhn4","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-6tntf","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-83xkg","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-1escp","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-65vp6","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-6nd6i","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-8upi8","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityvalue(_:)-2etop","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityvalue(_:)-49s8k","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityvalue(_:)-84tbz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:)-16u0b","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:)-3n5hp","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:)-45fvo","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:message:)-2cghn","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:message:)-4ytq0","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:message:)-8s3sk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:)-1f8wp","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:)-576wq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:)-9uq4v","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:message:)-1dvlr","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:message:)-5ljx1","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:message:)-5w6xn","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alignmentguide(_:computevalue:)-3p06q","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alignmentguide(_:computevalue:)-6y9db","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/aspectratio(_:contentmode:)-2rwe7","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/aspectratio(_:contentmode:)-30pa8","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:in:fillstyle:)-8svtp","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:in:fillstyle:)-wvv1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(in:fillstyle:)-3m82r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(in:fillstyle:)-41hzd","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-1aesh","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-24kbo","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-2v9vk","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-kgyu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonstyle(_:)-4xth6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonstyle(_:)-65lee","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-37gwv","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3zwya","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-kt52","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5f8d5","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8v2ns","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9wws","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6a83t","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7o1xb","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8v3j","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2v542","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4y8v4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-pshq","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentmargins(_:_:for:)-66rea","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentmargins(_:_:for:)-zpfg","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(_:issuppressed:)-7m1e9","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(_:issuppressed:)-7u5px","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(_:issuppressed:)-g61u","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogconfirmationlabel(_:)-2ezix","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogconfirmationlabel(_:)-5jgxq","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogconfirmationlabel(_:)-6wffc","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogmessage(_:)-36w3a","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogmessage(_:)-403qo","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogmessage(_:)-80p9t","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-19wsy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-67xve","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6datz","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-74uv6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7rm7p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-a48n","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-45ex1","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8szt4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporterfilenamelabel(_:)-3ig00","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporterfilenamelabel(_:)-4sfge","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporterfilenamelabel(_:)-9fx13","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedobject(_:)-41zrp","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedobject(_:)-9ykbf","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedsceneobject(_:)-39s81","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedsceneobject(_:)-89gho","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedscenevalue(_:_:)-626ar","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedscenevalue(_:_:)-6o80c","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedvalue(_:_:)-33426","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedvalue(_:_:)-9um1w","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/help(_:)-5ft52","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/help(_:)-7tlb7","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/help(_:)-dhxc","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listitemtint(_:)-12rb9","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listitemtint(_:)-9iokj","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionspacing(_:)-23k1i","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionspacing(_:)-8wkx7","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:)-27d56","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:)-2u5pw","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:)-2wiik","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:displaymode:)-2jgji","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:displaymode:)-2m0uv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:displaymode:)-461ac","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:)-3eiyf","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:)-677vo","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-4ymoe","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-6mni9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-6z2ps","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-97d31","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-17s4r","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-29rn8","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-6dwfb","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-91g3s","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-fp9s","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onchange(of:initial:_:)-49mpk","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onchange(of:initial:_:)-5p4wa","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:delegate:)-58g94","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:delegate:)-5nfby","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-1fczm","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-8dud2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-9d3up","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-c0u3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/padding(_:)-56dr0","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/padding(_:)-70ncx","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/renameaction(_:)-7q398","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/renameaction(_:)-i3vq","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareainset(edge:alignment:spacing:content:)-2rc14","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareainset(edge:alignment:spacing:content:)-34rgz","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareapadding(_:)-5c67x","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareapadding(_:)-9x8mm","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaleeffect(_:anchor:)-9i5ye","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaleeffect(_:anchor:)-u680","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2mskr","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3m77f","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4y7cg","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:placement:prompt:token:)-14fg6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:placement:prompt:token:)-7lp94","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:placement:prompt:token:)-8q8d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:ispresented:placement:prompt:)-4ln5s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:ispresented:placement:prompt:)-5elao","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:ispresented:placement:prompt:)-7scwn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:)-2c67w","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:)-5dzhx","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:)-uwo6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:suggestions:)-26f40","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:suggestions:)-3zibz","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:suggestions:)-84u1m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-2c0i9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-6p925","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-6xek","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:placement:prompt:token:)-3lav7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:placement:prompt:token:)-7vkg4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:placement:prompt:token:)-xnva","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5k22k","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7t9tt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8d24p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2jwvz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3n4s5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-42wze","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(content:)-41oj9","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(content:)-g98l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarbackground(_:for:)-2jdpb","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarbackground(_:for:)-7829i","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typeselectequivalent(_:)-5v7r4","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typeselectequivalent(_:)-678iw","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typeselectequivalent(_:)-88du5","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typesettinglanguage(_:isenabled:)-83w6","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typesettinglanguage(_:isenabled:)-sd4n","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(activationpoint:)-27tja","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(activationpoint:)-wjxh","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(named:_:)-9jx5z","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(named:_:)-gvux","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaction(named:_:)-zww2","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityactivationpoint(_:)-4mab7","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityactivationpoint(_:)-92xuf","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-1fqhn","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-2mcb0","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-3s2o7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-6mo30","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-7utvq","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-9dzu","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-9kuwp","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitycustomcontent(_:_:importance:)-9td1c","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhint(_:)-5chyr","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhint(_:)-9n320","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityhint(_:)-m8ge","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityinputlabels(_:)-2hbo0","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityinputlabels(_:)-8ksah","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityinputlabels(_:)-cnq5","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabel(_:)-1nq6x","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabel(_:)-5o0e3","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabel(_:)-9ck3q","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-5f5pw","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-6vf21","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-8hqto","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:)-8qxfr","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-2g2od","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-4orr6","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-8pazp","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entryid:entrylabel:)-9y9fm","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-3c4v3","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-4lhn4","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-6tntf","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:entries:entrylabel:)-83xkg","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-1escp","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-65vp6","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-6nd6i","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotor(_:textranges:)-8upi8","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityvalue(_:)-2etop","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityvalue(_:)-49s8k","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityvalue(_:)-84tbz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:)-16u0b","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:)-3n5hp","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:)-45fvo","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:message:)-2cghn","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:message:)-4ytq0","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:actions:message:)-8s3sk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:)-1f8wp","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:)-576wq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:)-9uq4v","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:message:)-1dvlr","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:message:)-5ljx1","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(_:ispresented:presenting:actions:message:)-5w6xn","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alignmentguide(_:computevalue:)-3p06q","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alignmentguide(_:computevalue:)-6y9db","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/aspectratio(_:contentmode:)-2rwe7","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/aspectratio(_:contentmode:)-30pa8","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:in:fillstyle:)-8svtp","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(_:in:fillstyle:)-wvv1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(in:fillstyle:)-3m82r","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/background(in:fillstyle:)-41hzd","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-1aesh","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-24kbo","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-2v9vk","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badge(_:)-kgyu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonstyle(_:)-4xth6","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/buttonstyle(_:)-65lee","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-37gwv","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3zwya","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:)-kt52","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5f8d5","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8v2ns","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9wws","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6a83t","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7o1xb","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8v3j","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2v542","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4y8v4","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-pshq","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentmargins(_:_:for:)-66rea","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentmargins(_:_:for:)-zpfg","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(_:issuppressed:)-7m1e9","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(_:issuppressed:)-7u5px","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(_:issuppressed:)-g61u","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogconfirmationlabel(_:)-2ezix","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogconfirmationlabel(_:)-5jgxq","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogconfirmationlabel(_:)-6wffc","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogmessage(_:)-36w3a","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogmessage(_:)-403qo","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogmessage(_:)-80p9t","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-19wsy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-67xve","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6datz","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-74uv6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7rm7p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttype:oncompletion:)-a48n","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-45ex1","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8szt4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporterfilenamelabel(_:)-3ig00","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporterfilenamelabel(_:)-4sfge","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileexporterfilenamelabel(_:)-9fx13","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedobject(_:)-41zrp","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedobject(_:)-9ykbf","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedsceneobject(_:)-39s81","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedsceneobject(_:)-89gho","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedscenevalue(_:_:)-626ar","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedscenevalue(_:_:)-6o80c","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedvalue(_:_:)-33426","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/focusedvalue(_:_:)-9um1w","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/help(_:)-5ft52","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/help(_:)-7tlb7","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/help(_:)-dhxc","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listitemtint(_:)-12rb9","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listitemtint(_:)-9iokj","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionspacing(_:)-23k1i","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/listsectionspacing(_:)-8wkx7","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:)-27d56","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:)-2u5pw","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:)-2wiik","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:displaymode:)-2jgji","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:displaymode:)-2m0uv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitle(_:displaymode:)-461ac","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:)-3eiyf","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:)-677vo","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-4ymoe","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-6mni9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-6z2ps","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationdocument(_:preview:)-97d31","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-17s4r","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-29rn8","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-6dwfb","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-91g3s","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationtitle(_:)-fp9s","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onchange(of:initial:_:)-49mpk","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onchange(of:initial:_:)-5p4wa","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:delegate:)-58g94","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:delegate:)-5nfby","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-1fczm","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-8dud2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-9d3up","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ondrop(of:istargeted:perform:)-c0u3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/padding(_:)-56dr0","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/padding(_:)-70ncx","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/renameaction(_:)-7q398","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/renameaction(_:)-i3vq","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareainset(edge:alignment:spacing:content:)-2rc14","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareainset(edge:alignment:spacing:content:)-34rgz","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareapadding(_:)-5c67x","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareapadding(_:)-9x8mm","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaleeffect(_:anchor:)-9i5ye","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaleeffect(_:anchor:)-u680","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2mskr","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3m77f","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4y7cg","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:placement:prompt:token:)-14fg6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:placement:prompt:token:)-7lp94","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:editabletokens:placement:prompt:token:)-8q8d","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:ispresented:placement:prompt:)-4ln5s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:ispresented:placement:prompt:)-5elao","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:ispresented:placement:prompt:)-7scwn","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:)-2c67w","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:)-5dzhx","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:)-uwo6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:suggestions:)-26f40","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:suggestions:)-3zibz","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:placement:prompt:suggestions:)-84u1m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-2c0i9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-6p925","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:ispresented:placement:prompt:token:)-6xek","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:placement:prompt:token:)-3lav7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:placement:prompt:token:)-7vkg4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:placement:prompt:token:)-xnva","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5k22k","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7t9tt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8d24p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2jwvz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3n4s5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-42wze","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(content:)-41oj9","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(content:)-g98l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarbackground(_:for:)-2jdpb","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarbackground(_:for:)-7829i","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typeselectequivalent(_:)-5v7r4","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typeselectequivalent(_:)-678iw","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typeselectequivalent(_:)-88du5","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typesettinglanguage(_:isenabled:)-83w6","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/typesettinglanguage(_:isenabled:)-sd4n","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/segmentationeditionoverlay","title":"SegmentationEditionOverlay","type":"struct"},{"path":"\/documentation\/edgesegmentation\/swiftui\/view\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"title":"Default edition components","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/init(box:drawing:zoomscale:)","title":"init(box: CGRect, drawing: Bool, zoomScale: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(activationpoint:)-85qo2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(activationpoint:)-9xmqk","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(named:_:)-2uijj","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(named:_:)-88dpz","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(named:_:)-9tki9","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityactivationpoint(_:)-2n4c9","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityactivationpoint(_:)-7soet","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-2q543","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-2rxw","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-332bc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-3uri1","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-42x8f","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-5150y","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-6tqgr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-7aycr","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhint(_:)-1e3e5","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhint(_:)-6mpns","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhint(_:)-w8jl","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityinputlabels(_:)-21ud1","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityinputlabels(_:)-2f2g3","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityinputlabels(_:)-6gnzr","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabel(_:)-3rb23","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabel(_:)-3vy9v","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabel(_:)-4g267","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-1m6uv","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-3txbk","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-46xui","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-5x8gp","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1dfwi","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-53wuk","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7u0lp","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-mout","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-1el5l","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-3cbc0","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-7grix","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-8gk47","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-2dyr4","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-3y3vn","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-6vl0b","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-7gvqg","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityvalue(_:)-1bb2e","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityvalue(_:)-4d520","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityvalue(_:)-7qgnr","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:)-1ak8g","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:)-6qyuz","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:)-6wed5","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:message:)-1cnog","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:message:)-6rng","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:message:)-93ows","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:)-1bu58","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:)-20thj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:)-9ri26","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:message:)-1zly3","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:message:)-4nvjw","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:message:)-6cep2","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alignmentguide(_:computevalue:)-1nmla","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alignmentguide(_:computevalue:)-6rf6u","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/aspectratio(_:contentmode:)-5dlzm","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/aspectratio(_:contentmode:)-agre","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:in:fillstyle:)-5zexu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:in:fillstyle:)-xohk","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(in:fillstyle:)-40jhr","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(in:fillstyle:)-88xjc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-2qu3o","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-3nhg8","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-4opqj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-fe4c","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonstyle(_:)-48xqi","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonstyle(_:)-7fowy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2ujsg","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-44ksx","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7h1vg","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5pt82","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9ut7h","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-l0jo","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-591lj","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6eo0a","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8z1qp","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1j1yd","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7n8ok","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8azvo","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentmargins(_:_:for:)-2f8kq","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentmargins(_:_:for:)-919pz","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(_:issuppressed:)-1xr99","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(_:issuppressed:)-332jg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(_:issuppressed:)-6uer5","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogconfirmationlabel(_:)-18qmq","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogconfirmationlabel(_:)-7tub7","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogconfirmationlabel(_:)-9ca0t","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogmessage(_:)-5qbyp","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogmessage(_:)-8yjj5","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogmessage(_:)-c54m","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2q82q","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5tvsu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8oqsm","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8smzt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-53clp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-87g16","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5bzjr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5ksff","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporterfilenamelabel(_:)-2agez","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporterfilenamelabel(_:)-6q08l","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporterfilenamelabel(_:)-7je26","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedobject(_:)-3malh","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedobject(_:)-5k573","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedsceneobject(_:)-361jh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedsceneobject(_:)-4e7er","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedscenevalue(_:_:)-143vx","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedscenevalue(_:_:)-uuxn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedvalue(_:_:)-172s0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedvalue(_:_:)-1rhv8","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/help(_:)-3j1qq","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/help(_:)-61m7c","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/help(_:)-p0qd","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listitemtint(_:)-1qjrp","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listitemtint(_:)-56ew6","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionspacing(_:)-152q4","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionspacing(_:)-3tpgl","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:)-8qfof","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:)-9enj6","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:)-fjkc","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:displaymode:)-2bwsb","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:displaymode:)-6b95k","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:displaymode:)-74z5q","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:)-3xdet","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:)-4cydf","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-1kz6h","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-51lgh","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-7cww1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-93loh","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-4dma8","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-731zz","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-8d5dt","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-8ubmo","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-slv0","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onchange(of:initial:_:)-5i7pr","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onchange(of:initial:_:)-9mhky","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/oncontinuoushover(coordinatespace:perform:)-3s9p1","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/oncontinuoushover(coordinatespace:perform:)-ji0n","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:delegate:)-3uq99","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:delegate:)-9s2mm","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-333mb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-6kjaf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-6qpt3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-86cfj","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ontapgesture(count:coordinatespace:perform:)-1igiz","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ontapgesture(count:coordinatespace:perform:)-819aq","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/padding(_:)-9c4bu","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/padding(_:)-9rp3c","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/renameaction(_:)-4y4hd","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/renameaction(_:)-64ffv","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareainset(edge:alignment:spacing:content:)-1glzb","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareainset(edge:alignment:spacing:content:)-8y9hn","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareapadding(_:)-31tpo","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareapadding(_:)-3nhmd","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaleeffect(_:anchor:)-4xkzo","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaleeffect(_:anchor:)-5xf96","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1z98i","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3kppu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7q219","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:placement:prompt:token:)-1dows","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:placement:prompt:token:)-8sfme","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:placement:prompt:token:)-99in5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:ispresented:placement:prompt:)-30tb4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:ispresented:placement:prompt:)-51kuk","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:ispresented:placement:prompt:)-5riuc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:)-6s6kd","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:)-8dr9a","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:)-9wx5f","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:suggestions:)-1n8xz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:suggestions:)-3dug9","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:suggestions:)-5s09h","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1eriy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5jtjy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:ispresented:placement:prompt:token:)-86wuy","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:placement:prompt:token:)-18z8j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:placement:prompt:token:)-4nkod","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:placement:prompt:token:)-97h5q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3lqza","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-60mru","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-z58p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1gatq","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-76uw6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8i0jp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(content:)-8ik0n","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(content:)-y557","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarbackground(_:for:)-4xgbo","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarbackground(_:for:)-6fd28","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typeselectequivalent(_:)-62oar","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typeselectequivalent(_:)-89i6o","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typeselectequivalent(_:)-uuwh","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typesettinglanguage(_:isenabled:)-3vkui","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typesettinglanguage(_:isenabled:)-9v2j5","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/defaultboxview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(activationpoint:)-85qo2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(activationpoint:)-9xmqk","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(named:_:)-2uijj","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(named:_:)-88dpz","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaction(named:_:)-9tki9","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityactivationpoint(_:)-2n4c9","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityactivationpoint(_:)-7soet","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-2q543","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-2rxw","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-332bc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-3uri1","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-42x8f","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-5150y","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-6tqgr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitycustomcontent(_:_:importance:)-7aycr","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhint(_:)-1e3e5","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhint(_:)-6mpns","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityhint(_:)-w8jl","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityinputlabels(_:)-21ud1","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityinputlabels(_:)-2f2g3","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityinputlabels(_:)-6gnzr","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabel(_:)-3rb23","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabel(_:)-3vy9v","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabel(_:)-4g267","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-1m6uv","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-3txbk","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-46xui","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:)-5x8gp","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1dfwi","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-53wuk","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7u0lp","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entryid:entrylabel:)-mout","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-1el5l","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-3cbc0","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-7grix","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:entries:entrylabel:)-8gk47","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-2dyr4","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-3y3vn","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-6vl0b","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotor(_:textranges:)-7gvqg","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityvalue(_:)-1bb2e","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityvalue(_:)-4d520","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityvalue(_:)-7qgnr","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:)-1ak8g","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:)-6qyuz","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:)-6wed5","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:message:)-1cnog","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:message:)-6rng","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:actions:message:)-93ows","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:)-1bu58","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:)-20thj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:)-9ri26","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:message:)-1zly3","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:message:)-4nvjw","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(_:ispresented:presenting:actions:message:)-6cep2","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alignmentguide(_:computevalue:)-1nmla","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alignmentguide(_:computevalue:)-6rf6u","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/aspectratio(_:contentmode:)-5dlzm","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/aspectratio(_:contentmode:)-agre","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:in:fillstyle:)-5zexu","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(_:in:fillstyle:)-xohk","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(in:fillstyle:)-40jhr","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/background(in:fillstyle:)-88xjc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-2qu3o","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-3nhg8","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-4opqj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badge(_:)-fe4c","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonstyle(_:)-48xqi","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/buttonstyle(_:)-7fowy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2ujsg","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-44ksx","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7h1vg","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5pt82","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9ut7h","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-l0jo","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-591lj","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6eo0a","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8z1qp","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1j1yd","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7n8ok","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8azvo","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentmargins(_:_:for:)-2f8kq","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentmargins(_:_:for:)-919pz","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(_:issuppressed:)-1xr99","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(_:issuppressed:)-332jg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(_:issuppressed:)-6uer5","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogconfirmationlabel(_:)-18qmq","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogconfirmationlabel(_:)-7tub7","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogconfirmationlabel(_:)-9ca0t","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogmessage(_:)-5qbyp","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogmessage(_:)-8yjj5","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogmessage(_:)-c54m","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2q82q","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5tvsu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8oqsm","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8smzt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-53clp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-87g16","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5bzjr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5ksff","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporterfilenamelabel(_:)-2agez","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporterfilenamelabel(_:)-6q08l","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileexporterfilenamelabel(_:)-7je26","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedobject(_:)-3malh","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedobject(_:)-5k573","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedsceneobject(_:)-361jh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedsceneobject(_:)-4e7er","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedscenevalue(_:_:)-143vx","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedscenevalue(_:_:)-uuxn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedvalue(_:_:)-172s0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/focusedvalue(_:_:)-1rhv8","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/help(_:)-3j1qq","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/help(_:)-61m7c","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/help(_:)-p0qd","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listitemtint(_:)-1qjrp","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listitemtint(_:)-56ew6","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionspacing(_:)-152q4","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/listsectionspacing(_:)-3tpgl","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:)-8qfof","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:)-9enj6","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:)-fjkc","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:displaymode:)-2bwsb","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:displaymode:)-6b95k","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitle(_:displaymode:)-74z5q","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:)-3xdet","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:)-4cydf","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-1kz6h","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-51lgh","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-7cww1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationdocument(_:preview:)-93loh","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-4dma8","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-731zz","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-8d5dt","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-8ubmo","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationtitle(_:)-slv0","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onchange(of:initial:_:)-5i7pr","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onchange(of:initial:_:)-9mhky","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/oncontinuoushover(coordinatespace:perform:)-3s9p1","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/oncontinuoushover(coordinatespace:perform:)-ji0n","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:delegate:)-3uq99","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:delegate:)-9s2mm","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-333mb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-6kjaf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-6qpt3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ondrop(of:istargeted:perform:)-86cfj","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/ontapgesture(count:coordinatespace:perform:)-1igiz","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ontapgesture(count:coordinatespace:perform:)-819aq","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/padding(_:)-9c4bu","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/padding(_:)-9rp3c","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/renameaction(_:)-4y4hd","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/renameaction(_:)-64ffv","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareainset(edge:alignment:spacing:content:)-1glzb","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareainset(edge:alignment:spacing:content:)-8y9hn","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareapadding(_:)-31tpo","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareapadding(_:)-3nhmd","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaleeffect(_:anchor:)-4xkzo","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaleeffect(_:anchor:)-5xf96","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1z98i","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3kppu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7q219","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:placement:prompt:token:)-1dows","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:placement:prompt:token:)-8sfme","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:editabletokens:placement:prompt:token:)-99in5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:ispresented:placement:prompt:)-30tb4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:ispresented:placement:prompt:)-51kuk","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:ispresented:placement:prompt:)-5riuc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:)-6s6kd","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:)-8dr9a","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:)-9wx5f","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:suggestions:)-1n8xz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:suggestions:)-3dug9","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:placement:prompt:suggestions:)-5s09h","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1eriy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5jtjy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:ispresented:placement:prompt:token:)-86wuy","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:placement:prompt:token:)-18z8j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:placement:prompt:token:)-4nkod","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:placement:prompt:token:)-97h5q","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3lqza","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-60mru","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-z58p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1gatq","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-76uw6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8i0jp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(content:)-8ik0n","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(content:)-y557","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarbackground(_:for:)-4xgbo","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarbackground(_:for:)-6fd28","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typeselectequivalent(_:)-62oar","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typeselectequivalent(_:)-89i6o","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typeselectequivalent(_:)-uuwh","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typesettinglanguage(_:isenabled:)-3vkui","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/typesettinglanguage(_:isenabled:)-9v2j5","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/defaultboxview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/defaultboxview","title":"DefaultBoxView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/init(viewsize:box:zoomscale:)","title":"init(viewSize: CGSize, box: CGRect, zoomScale: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(activationpoint:)-7hku6","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(activationpoint:)-9tfy2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(named:_:)-2a6z0","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(named:_:)-415fk","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(named:_:)-4amop","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityactivationpoint(_:)-2qd1m","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityactivationpoint(_:)-91hef","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-14inl","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-1m8oi","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-2g32s","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-7xyxd","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-92u7k","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-dug7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-ij5g","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-rg19","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhint(_:)-3z0s6","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhint(_:)-4t5tm","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhint(_:)-9p2xi","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityinputlabels(_:)-3ql5u","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityinputlabels(_:)-6lrfg","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityinputlabels(_:)-96b4m","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabel(_:)-146ld","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabel(_:)-5eaj3","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabel(_:)-9w0ls","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-2nlw7","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-4qvkj","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-7kki9","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-8x606","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8c6tb","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8oxun","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8yfzj","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9geku","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-8neko","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-945au","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-ija0","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-r7o8","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-2ee03","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-3lyji","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-6e14b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-7r3ug","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityvalue(_:)-28mu5","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityvalue(_:)-2ipwb","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityvalue(_:)-8rdmb","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:)-5yy7j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:)-9ngju","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:)-vecv","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:message:)-37i15","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:message:)-50neq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:message:)-r7yi","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:)-3p4n2","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:)-4j1vr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:)-7dmk","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:message:)-4xgv3","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:message:)-552im","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:message:)-61l2p","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alignmentguide(_:computevalue:)-60tur","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alignmentguide(_:computevalue:)-65du8","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/aspectratio(_:contentmode:)-3vc5b","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/aspectratio(_:contentmode:)-7i1as","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:in:fillstyle:)-8yz3f","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:in:fillstyle:)-mo5n","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(in:fillstyle:)-809xd","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(in:fillstyle:)-9nduc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-36upv","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-55awt","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-60prh","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-9wcgc","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonstyle(_:)-7mvx2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonstyle(_:)-8h5h1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-390ye","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-92hr7","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-zcd7","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-436p","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6obw7","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-tb71","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4xssm","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6at9m","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-90gql","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2b0rl","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2foj5","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9i0ex","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentmargins(_:_:for:)-6csdb","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentmargins(_:_:for:)-7w0mj","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(_:issuppressed:)-45xlw","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(_:issuppressed:)-7gwn8","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(_:issuppressed:)-7v52p","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogconfirmationlabel(_:)-3fnzc","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogconfirmationlabel(_:)-79wrm","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogconfirmationlabel(_:)-9pqhd","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogmessage(_:)-1hdct","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogmessage(_:)-1rm4j","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogmessage(_:)-6xw5p","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7waq2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-bdc7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-16ekt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4utlg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1thxl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2lt5g","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-11zvb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4pnte","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporterfilenamelabel(_:)-14nxv","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporterfilenamelabel(_:)-19rfp","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporterfilenamelabel(_:)-51v90","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedobject(_:)-15g27","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedobject(_:)-32kbo","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedsceneobject(_:)-4o12b","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedsceneobject(_:)-90k0a","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedscenevalue(_:_:)-6w729","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedscenevalue(_:_:)-9u84u","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedvalue(_:_:)-2umon","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedvalue(_:_:)-570i6","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/help(_:)-12yp3","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/help(_:)-7rd3b","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/help(_:)-89bde","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listitemtint(_:)-1zr3f","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listitemtint(_:)-84p13","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionspacing(_:)-16z4x","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionspacing(_:)-85oxf","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:)-2vp2r","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:)-3x3wz","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:)-tfwq","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:displaymode:)-2zor5","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:displaymode:)-8gl8r","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:displaymode:)-8yef1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:)-9i5v0","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:)-bedn","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-2u381","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-43icf","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-4eut2","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-51ovv","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-24xr6","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-47qma","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-5om02","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-82c9b","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-sv0y","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onchange(of:initial:_:)-2haq4","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onchange(of:initial:_:)-729p5","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/oncontinuoushover(coordinatespace:perform:)-6icmn","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/oncontinuoushover(coordinatespace:perform:)-6tvv","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:delegate:)-5a22x","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:delegate:)-5nvro","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-4ujr","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-869fb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-88jjf","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-b8rn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ontapgesture(count:coordinatespace:perform:)-6ck2n","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ontapgesture(count:coordinatespace:perform:)-7e0ii","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/padding(_:)-3jsoj","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/padding(_:)-4jh59","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/renameaction(_:)-1lhzk","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/renameaction(_:)-9ehva","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareainset(edge:alignment:spacing:content:)-3u7v0","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareainset(edge:alignment:spacing:content:)-7epbt","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareapadding(_:)-2sb7g","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareapadding(_:)-68rso","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaleeffect(_:anchor:)-185z3","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaleeffect(_:anchor:)-3tpoy","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-19686","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2w6sa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7lwum","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:placement:prompt:token:)-376m0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:placement:prompt:token:)-62p60","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:placement:prompt:token:)-6sgmb","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:ispresented:placement:prompt:)-13n9z","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:ispresented:placement:prompt:)-61yux","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:ispresented:placement:prompt:)-6u3s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:)-24xeu","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:)-7j18v","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:)-8m5ye","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:suggestions:)-11gxv","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:suggestions:)-57t4q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:suggestions:)-8bsqt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7o3zm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9cchv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9g1gu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:placement:prompt:token:)-1jfnj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:placement:prompt:token:)-5i8s2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:placement:prompt:token:)-6jxh9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-10jpa","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5by4p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9fwm6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1sjao","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5cars","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-ddd7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(content:)-ly48","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(content:)-tyxu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarbackground(_:for:)-6z451","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarbackground(_:for:)-9tonb","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typeselectequivalent(_:)-2ify0","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typeselectequivalent(_:)-2plxu","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typeselectequivalent(_:)-5mg1e","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typesettinglanguage(_:isenabled:)-1j8ei","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typesettinglanguage(_:isenabled:)-8ug5v","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(activationpoint:)-7hku6","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(activationpoint:)-9tfy2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(named:_:)-2a6z0","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(named:_:)-415fk","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaction(named:_:)-4amop","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityactivationpoint(_:)-2qd1m","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityactivationpoint(_:)-91hef","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-14inl","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-1m8oi","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-2g32s","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-7xyxd","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-92u7k","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-dug7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-ij5g","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitycustomcontent(_:_:importance:)-rg19","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhint(_:)-3z0s6","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhint(_:)-4t5tm","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityhint(_:)-9p2xi","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityinputlabels(_:)-3ql5u","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityinputlabels(_:)-6lrfg","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityinputlabels(_:)-96b4m","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabel(_:)-146ld","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabel(_:)-5eaj3","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabel(_:)-9w0ls","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-2nlw7","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-4qvkj","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-7kki9","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:)-8x606","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8c6tb","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8oxun","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8yfzj","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9geku","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-8neko","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-945au","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-ija0","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:entries:entrylabel:)-r7o8","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-2ee03","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-3lyji","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-6e14b","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotor(_:textranges:)-7r3ug","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityvalue(_:)-28mu5","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityvalue(_:)-2ipwb","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityvalue(_:)-8rdmb","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:)-5yy7j","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:)-9ngju","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:)-vecv","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:message:)-37i15","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:message:)-50neq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:actions:message:)-r7yi","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:)-3p4n2","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:)-4j1vr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:)-7dmk","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:message:)-4xgv3","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:message:)-552im","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(_:ispresented:presenting:actions:message:)-61l2p","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alignmentguide(_:computevalue:)-60tur","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alignmentguide(_:computevalue:)-65du8","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/aspectratio(_:contentmode:)-3vc5b","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/aspectratio(_:contentmode:)-7i1as","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:in:fillstyle:)-8yz3f","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(_:in:fillstyle:)-mo5n","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(in:fillstyle:)-809xd","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/background(in:fillstyle:)-9nduc","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-36upv","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-55awt","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-60prh","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badge(_:)-9wcgc","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonstyle(_:)-7mvx2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/buttonstyle(_:)-8h5h1","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-390ye","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-92hr7","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-zcd7","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-436p","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6obw7","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-tb71","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4xssm","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6at9m","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-90gql","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2b0rl","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2foj5","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9i0ex","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentmargins(_:_:for:)-6csdb","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentmargins(_:_:for:)-7w0mj","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(_:issuppressed:)-45xlw","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(_:issuppressed:)-7gwn8","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(_:issuppressed:)-7v52p","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogconfirmationlabel(_:)-3fnzc","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogconfirmationlabel(_:)-79wrm","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogconfirmationlabel(_:)-9pqhd","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogmessage(_:)-1hdct","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogmessage(_:)-1rm4j","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogmessage(_:)-6xw5p","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7waq2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-bdc7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-16ekt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4utlg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1thxl","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2lt5g","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-11zvb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4pnte","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporterfilenamelabel(_:)-14nxv","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporterfilenamelabel(_:)-19rfp","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileexporterfilenamelabel(_:)-51v90","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedobject(_:)-15g27","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedobject(_:)-32kbo","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedsceneobject(_:)-4o12b","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedsceneobject(_:)-90k0a","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedscenevalue(_:_:)-6w729","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedscenevalue(_:_:)-9u84u","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedvalue(_:_:)-2umon","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/focusedvalue(_:_:)-570i6","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/help(_:)-12yp3","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/help(_:)-7rd3b","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/help(_:)-89bde","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listitemtint(_:)-1zr3f","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listitemtint(_:)-84p13","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionspacing(_:)-16z4x","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/listsectionspacing(_:)-85oxf","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:)-2vp2r","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:)-3x3wz","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:)-tfwq","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:displaymode:)-2zor5","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:displaymode:)-8gl8r","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitle(_:displaymode:)-8yef1","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:)-9i5v0","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:)-bedn","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-2u381","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-43icf","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-4eut2","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationdocument(_:preview:)-51ovv","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-24xr6","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-47qma","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-5om02","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-82c9b","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationtitle(_:)-sv0y","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onchange(of:initial:_:)-2haq4","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onchange(of:initial:_:)-729p5","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/oncontinuoushover(coordinatespace:perform:)-6icmn","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/oncontinuoushover(coordinatespace:perform:)-6tvv","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:delegate:)-5a22x","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:delegate:)-5nvro","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-4ujr","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-869fb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-88jjf","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ondrop(of:istargeted:perform:)-b8rn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ontapgesture(count:coordinatespace:perform:)-6ck2n","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ontapgesture(count:coordinatespace:perform:)-7e0ii","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/padding(_:)-3jsoj","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/padding(_:)-4jh59","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/renameaction(_:)-1lhzk","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/renameaction(_:)-9ehva","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareainset(edge:alignment:spacing:content:)-3u7v0","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareainset(edge:alignment:spacing:content:)-7epbt","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareapadding(_:)-2sb7g","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareapadding(_:)-68rso","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaleeffect(_:anchor:)-185z3","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaleeffect(_:anchor:)-3tpoy","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-19686","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2w6sa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7lwum","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:placement:prompt:token:)-376m0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:placement:prompt:token:)-62p60","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:editabletokens:placement:prompt:token:)-6sgmb","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:ispresented:placement:prompt:)-13n9z","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:ispresented:placement:prompt:)-61yux","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:ispresented:placement:prompt:)-6u3s","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:)-24xeu","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:)-7j18v","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:)-8m5ye","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:suggestions:)-11gxv","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:suggestions:)-57t4q","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:placement:prompt:suggestions:)-8bsqt","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7o3zm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9cchv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9g1gu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:placement:prompt:token:)-1jfnj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:placement:prompt:token:)-5i8s2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:placement:prompt:token:)-6jxh9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-10jpa","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5by4p","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9fwm6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1sjao","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5cars","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-ddd7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(content:)-ly48","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(content:)-tyxu","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarbackground(_:for:)-6z451","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarbackground(_:for:)-9tonb","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typeselectequivalent(_:)-2ify0","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typeselectequivalent(_:)-2plxu","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typeselectequivalent(_:)-5mg1e","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typesettinglanguage(_:isenabled:)-1j8ei","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/typesettinglanguage(_:isenabled:)-8ug5v","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/defaultboxtrashview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/defaultboxtrashview","title":"DefaultBoxTrashView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/init(color:zoomscale:)","title":"init(color: Color, zoomScale: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(activationpoint:)-28miv","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(activationpoint:)-699za","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(named:_:)-2siwz","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(named:_:)-hviv","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(named:_:)-ydfn","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityactivationpoint(_:)-2w4q5","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityactivationpoint(_:)-8it4t","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-1xptg","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-2thuw","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-3844w","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-4duif","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-7kh1n","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-889iz","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-9dju4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-y6gw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhint(_:)-6qjig","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhint(_:)-70cdx","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhint(_:)-7fmfr","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityinputlabels(_:)-2gyow","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityinputlabels(_:)-308p8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityinputlabels(_:)-3u5oy","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabel(_:)-62rzh","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabel(_:)-8ey88","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabel(_:)-8uuk5","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-40qg0","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-45zsv","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-5ezir","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-6qcmg","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3u4fa","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6hu6c","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-86xsv","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-r6wo","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-2cn1n","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-2q4kz","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-6ezy","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-7cfr1","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-1flfm","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-26p58","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-28ey","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-7zqr2","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityvalue(_:)-1bn6e","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityvalue(_:)-22bmj","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityvalue(_:)-dafx","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:)-2lqq6","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:)-3ahbe","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:)-3f659","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:message:)-5eaey","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:message:)-8r724","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:message:)-9m3dq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:)-4xnud","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:)-7etnq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:)-7zz8c","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:message:)-2idjx","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:message:)-53un8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:message:)-8onx4","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alignmentguide(_:computevalue:)-145ve","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alignmentguide(_:computevalue:)-3pt8r","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/aspectratio(_:contentmode:)-1k5pz","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/aspectratio(_:contentmode:)-3rnk0","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:in:fillstyle:)-39a6y","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:in:fillstyle:)-3rjvn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(in:fillstyle:)-2wy0d","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(in:fillstyle:)-gncf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-18rtv","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-41uu7","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-6zzcb","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-zm38","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonstyle(_:)-2ligs","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonstyle(_:)-gpwy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1re85","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4t2bu","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9gzrv","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-50nir","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zd7c","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-91rkj","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-13y6t","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1ugqi","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-33ore","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1tqev","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3wfbn","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9joqe","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentmargins(_:_:for:)-19p40","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentmargins(_:_:for:)-4hvf9","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(_:issuppressed:)-34xud","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(_:issuppressed:)-7dytw","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(_:issuppressed:)-9ecqe","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogconfirmationlabel(_:)-3bkpq","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogconfirmationlabel(_:)-7hzoe","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogconfirmationlabel(_:)-ul3v","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogmessage(_:)-2g5ok","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogmessage(_:)-2qp05","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogmessage(_:)-6bql6","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-35c4i","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-713s7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3k02c","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6d4tu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-59ptb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9alao","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3rzj2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-xcl8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporterfilenamelabel(_:)-7dudk","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporterfilenamelabel(_:)-8ds20","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporterfilenamelabel(_:)-90qhf","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedobject(_:)-5hw31","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedobject(_:)-95knp","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedsceneobject(_:)-5veg1","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedsceneobject(_:)-8scz8","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedscenevalue(_:_:)-33d9e","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedscenevalue(_:_:)-66grz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedvalue(_:_:)-5bg8o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedvalue(_:_:)-9vew1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/help(_:)-320oz","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/help(_:)-4lt5t","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/help(_:)-lkod","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listitemtint(_:)-8uvxn","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listitemtint(_:)-jkcs","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionspacing(_:)-1klkf","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionspacing(_:)-8w7jz","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:)-75mmt","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:)-7moox","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:)-7x274","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:displaymode:)-2htrg","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:displaymode:)-5ldmv","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:displaymode:)-gtc9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:)-1dy8o","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:)-pm52","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-2n95j","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-64y28","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-8qw5","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-rvsy","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-4h1vf","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-4lu6v","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-6f9lw","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-801ch","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-8ljaj","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onchange(of:initial:_:)-7r7xh","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onchange(of:initial:_:)-7rcwf","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/oncontinuoushover(coordinatespace:perform:)-2cxtt","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/oncontinuoushover(coordinatespace:perform:)-9n7ki","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:delegate:)-46pt","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:delegate:)-odmp","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-1asu5","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-2fu98","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-47v3y","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-6wraq","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ontapgesture(count:coordinatespace:perform:)-6ellh","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ontapgesture(count:coordinatespace:perform:)-w4no","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/padding(_:)-23ry8","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/padding(_:)-2jzbr","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/renameaction(_:)-1mg2g","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/renameaction(_:)-69as3","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareainset(edge:alignment:spacing:content:)-3dbeh","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareainset(edge:alignment:spacing:content:)-99i83","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareapadding(_:)-3gild","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareapadding(_:)-q678","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaleeffect(_:anchor:)-30qnu","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaleeffect(_:anchor:)-78wvd","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2q7c7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-48eba","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5k6ip","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:placement:prompt:token:)-3dats","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:placement:prompt:token:)-5zx16","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:placement:prompt:token:)-6y1z3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:ispresented:placement:prompt:)-1optj","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:ispresented:placement:prompt:)-2pzh0","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:ispresented:placement:prompt:)-7izu","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:)-2c0bf","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:)-4w9xg","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:)-bxun","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:suggestions:)-23utr","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:suggestions:)-9om0g","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:suggestions:)-jnmq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4lz6w","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:ispresented:placement:prompt:token:)-509fq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6tjlp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:placement:prompt:token:)-180h","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:placement:prompt:token:)-282it","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:placement:prompt:token:)-832is","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6rv2y","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-75bjx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9g09n","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-20fxa","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4r1uk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7n6u0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(content:)-525pf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(content:)-9ghde","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarbackground(_:for:)-2no8r","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarbackground(_:for:)-3d7mx","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typeselectequivalent(_:)-1ejiu","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typeselectequivalent(_:)-5ca1i","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typeselectequivalent(_:)-90ww0","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typesettinglanguage(_:isenabled:)-8pw21","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typesettinglanguage(_:isenabled:)-u32b","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/defaultpointview\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(activationpoint:)-28miv","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(activationpoint:)-699za","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(named:_:)-2siwz","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(named:_:)-hviv","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaction(named:_:)-ydfn","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityactivationpoint(_:)-2w4q5","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityactivationpoint(_:)-8it4t","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-1xptg","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-2thuw","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-3844w","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-4duif","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-7kh1n","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-889iz","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-9dju4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitycustomcontent(_:_:importance:)-y6gw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhint(_:)-6qjig","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhint(_:)-70cdx","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityhint(_:)-7fmfr","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityinputlabels(_:)-2gyow","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityinputlabels(_:)-308p8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityinputlabels(_:)-3u5oy","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabel(_:)-62rzh","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabel(_:)-8ey88","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabel(_:)-8uuk5","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-40qg0","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-45zsv","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-5ezir","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:)-6qcmg","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3u4fa","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6hu6c","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-86xsv","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entryid:entrylabel:)-r6wo","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-2cn1n","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-2q4kz","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-6ezy","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:entries:entrylabel:)-7cfr1","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-1flfm","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-26p58","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-28ey","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotor(_:textranges:)-7zqr2","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityvalue(_:)-1bn6e","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityvalue(_:)-22bmj","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityvalue(_:)-dafx","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:)-2lqq6","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:)-3ahbe","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:)-3f659","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:message:)-5eaey","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:message:)-8r724","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:actions:message:)-9m3dq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:)-4xnud","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:)-7etnq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:)-7zz8c","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:message:)-2idjx","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:message:)-53un8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(_:ispresented:presenting:actions:message:)-8onx4","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alignmentguide(_:computevalue:)-145ve","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alignmentguide(_:computevalue:)-3pt8r","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/aspectratio(_:contentmode:)-1k5pz","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/aspectratio(_:contentmode:)-3rnk0","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:in:fillstyle:)-39a6y","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(_:in:fillstyle:)-3rjvn","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(in:fillstyle:)-2wy0d","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/background(in:fillstyle:)-gncf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-18rtv","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-41uu7","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-6zzcb","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badge(_:)-zm38","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonstyle(_:)-2ligs","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/buttonstyle(_:)-gpwy","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1re85","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4t2bu","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9gzrv","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-50nir","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zd7c","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-91rkj","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-13y6t","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1ugqi","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-33ore","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1tqev","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3wfbn","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9joqe","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentmargins(_:_:for:)-19p40","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentmargins(_:_:for:)-4hvf9","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(_:issuppressed:)-34xud","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(_:issuppressed:)-7dytw","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(_:issuppressed:)-9ecqe","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/draggablesegmentation(geometry:segmentation:enabled:)","title":"func draggableSegmentation(geometry: ImageGeometry?, segmentation: Segmentation?, enabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogconfirmationlabel(_:)-3bkpq","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogconfirmationlabel(_:)-7hzoe","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogconfirmationlabel(_:)-ul3v","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogmessage(_:)-2g5ok","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogmessage(_:)-2qp05","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogmessage(_:)-6bql6","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-35c4i","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-713s7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3k02c","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6d4tu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-59ptb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9alao","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3rzj2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-xcl8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporterfilenamelabel(_:)-7dudk","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporterfilenamelabel(_:)-8ds20","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileexporterfilenamelabel(_:)-90qhf","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedobject(_:)-5hw31","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedobject(_:)-95knp","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedsceneobject(_:)-5veg1","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedsceneobject(_:)-8scz8","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedscenevalue(_:_:)-33d9e","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedscenevalue(_:_:)-66grz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedvalue(_:_:)-5bg8o","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/focusedvalue(_:_:)-9vew1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/help(_:)-320oz","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/help(_:)-4lt5t","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/help(_:)-lkod","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardshortcut(_:)","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listitemtint(_:)-8uvxn","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listitemtint(_:)-jkcs","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionspacing(_:)-1klkf","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/listsectionspacing(_:)-8w7jz","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:)-75mmt","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:)-7moox","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:)-7x274","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:displaymode:)-2htrg","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:displaymode:)-5ldmv","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitle(_:displaymode:)-gtc9","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:)-1dy8o","title":"func navigationDocument<D>(D) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:)-pm52","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-2n95j","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-64y28","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-8qw5","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationdocument(_:preview:)-rvsy","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-4h1vf","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-4lu6v","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-6f9lw","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-801ch","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationtitle(_:)-8ljaj","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onchange(of:initial:_:)-7r7xh","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onchange(of:initial:_:)-7rcwf","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/oncontinuoushover(coordinatespace:perform:)-2cxtt","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/oncontinuoushover(coordinatespace:perform:)-9n7ki","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:delegate:)-46pt","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:delegate:)-odmp","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-1asu5","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-2fu98","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-47v3y","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ondrop(of:istargeted:perform:)-6wraq","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ontapgesture(count:coordinatespace:perform:)-6ellh","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/ontapgesture(count:coordinatespace:perform:)-w4no","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/padding(_:)-23ry8","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/padding(_:)-2jzbr","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/renameaction(_:)-1mg2g","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/renameaction(_:)-69as3","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareainset(edge:alignment:spacing:content:)-3dbeh","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareainset(edge:alignment:spacing:content:)-99i83","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareapadding(_:)-3gild","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareapadding(_:)-q678","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaleeffect(_:anchor:)-30qnu","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaleeffect(_:anchor:)-78wvd","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2q7c7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-48eba","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5k6ip","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:placement:prompt:token:)-3dats","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:placement:prompt:token:)-5zx16","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:editabletokens:placement:prompt:token:)-6y1z3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:ispresented:placement:prompt:)-1optj","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:ispresented:placement:prompt:)-2pzh0","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:ispresented:placement:prompt:)-7izu","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:)-2c0bf","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:)-4w9xg","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:)-bxun","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:suggestions:)-23utr","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:suggestions:)-9om0g","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:placement:prompt:suggestions:)-jnmq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4lz6w","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:ispresented:placement:prompt:token:)-509fq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6tjlp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:placement:prompt:token:)-180h","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:placement:prompt:token:)-282it","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:placement:prompt:token:)-832is","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6rv2y","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-75bjx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9g09n","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-20fxa","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4r1uk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7n6u0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/edgesegmentation\/defaultpointview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(content:)-525pf","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(content:)-9ghde","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarbackground(_:for:)-2no8r","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarbackground(_:for:)-3d7mx","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typeselectequivalent(_:)-1ejiu","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typeselectequivalent(_:)-5ca1i","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typeselectequivalent(_:)-90ww0","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typesettinglanguage(_:isenabled:)-8pw21","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/typesettinglanguage(_:isenabled:)-u32b","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"},{"path":"\/documentation\/edgesegmentation\/defaultpointview\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/defaultpointview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/defaultpointview","title":"DefaultPointView","type":"struct"},{"title":"Programmatic segmentation for CGImage","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentor\/init(for:maxholes:)","title":"init(for: CGImage, maxHoles: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentor\/image","title":"let image: CGImage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentor\/processimage()","title":"func processImage() async throws","type":"method"},{"path":"\/documentation\/edgesegmentation\/coresegmentor\/segmentation(for:)","title":"func segmentation(for: SegmentationInput) async throws -> CoreSegmentation","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentor\/prepare()","title":"static func prepare()","type":"method"}],"path":"\/documentation\/edgesegmentation\/coresegmentor","title":"CoreSegmentor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/init(mainpathpoints:holespoints:)","title":"init(mainPathPoints: [CGPoint], holesPoints: [[CGPoint]])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/holespoints","title":"let holesPoints: [[CGPoint]]","type":"property"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/mainpathpoints","title":"let mainPathPoints: [CGPoint]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/fullpath(width:height:)","title":"func fullPath(width: CGFloat, height: CGFloat) -> CGPath","type":"method"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/holes(width:height:)","title":"func holes(width: CGFloat, height: CGFloat) -> [CGPath]","type":"method"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/mainpath(width:height:)","title":"func mainPath(width: CGFloat, height: CGFloat) -> CGPath","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/edgesegmentation\/coresegmentation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/coresegmentation","title":"CoreSegmentation","type":"struct"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/init(configuration:)","title":"init(configuration: MLModelConfiguration) throws","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/init(contentsof:)","title":"init(contentsOf: URL) throws","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/init(contentsof:configuration:)","title":"init(contentsOf: URL, configuration: MLModelConfiguration) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/model","title":"let model: MLModel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/prediction(image_embeddings:point_coords:point_labels:)-1y07r","title":"func prediction(image_embeddings: MLMultiArray, point_coords: MLMultiArray, point_labels: MLMultiArray) throws -> edge_sam_3x_decoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/prediction(image_embeddings:point_coords:point_labels:)-6na00","title":"func prediction(image_embeddings: MLShapedArray<Float>, point_coords: MLShapedArray<Float>, point_labels: MLShapedArray<Float>) throws -> edge_sam_3x_decoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/prediction(input:)","title":"func prediction(input: edge_sam_3x_decoderInput) throws -> edge_sam_3x_decoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/prediction(input:options:)-1s30w","title":"func prediction(input: edge_sam_3x_decoderInput, options: MLPredictionOptions) async throws -> edge_sam_3x_decoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/prediction(input:options:)-64veu","title":"func prediction(input: edge_sam_3x_decoderInput, options: MLPredictionOptions) throws -> edge_sam_3x_decoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/predictions(inputs:options:)","title":"func predictions(inputs: [edge_sam_3x_decoderInput], options: MLPredictionOptions) throws -> [edge_sam_3x_decoderOutput]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/load(configuration:)","title":"class func load(configuration: MLModelConfiguration) async throws -> edge_sam_3x_decoder","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/load(configuration:completionhandler:)","title":"class func load(configuration: MLModelConfiguration, completionHandler: (Swift.Result<edge_sam_3x_decoder, Error>) -> Void)","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/load(contentsof:configuration:)","title":"class func load(contentsOf: URL, configuration: MLModelConfiguration) async throws -> edge_sam_3x_decoder","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder\/load(contentsof:configuration:completionhandler:)","title":"class func load(contentsOf: URL, configuration: MLModelConfiguration, completionHandler: (Swift.Result<edge_sam_3x_decoder, Error>) -> Void)","type":"method"}],"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoder","title":"edge_sam_3x_decoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/init(image_embeddings:point_coords:point_labels:)-1n0dk","title":"init(image_embeddings: MLShapedArray<Float>, point_coords: MLShapedArray<Float>, point_labels: MLShapedArray<Float>)","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/init(image_embeddings:point_coords:point_labels:)-9guq7","title":"init(image_embeddings: MLMultiArray, point_coords: MLMultiArray, point_labels: MLMultiArray)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/featurenames","title":"var featureNames: Set<String>","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/image_embeddings","title":"var image_embeddings: MLMultiArray","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/point_coords","title":"var point_coords: MLMultiArray","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/point_labels","title":"var point_labels: MLMultiArray","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput\/featurevalue(for:)","title":"func featureValue(for: String) -> MLFeatureValue?","type":"method"}],"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderinput","title":"edge_sam_3x_decoderInput","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/init(features:)","title":"init(features: MLFeatureProvider)","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/init(scores:masks:)","title":"init(scores: MLMultiArray, masks: MLMultiArray)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/featurenames","title":"var featureNames: Set<String>","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/masks","title":"var masks: MLMultiArray","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/masksshapedarray","title":"var masksShapedArray: MLShapedArray<Float>","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/scores","title":"var scores: MLMultiArray","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/scoresshapedarray","title":"var scoresShapedArray: MLShapedArray<Float>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput\/featurevalue(for:)","title":"func featureValue(for: String) -> MLFeatureValue?","type":"method"}],"path":"\/documentation\/edgesegmentation\/edge_sam_3x_decoderoutput","title":"edge_sam_3x_decoderOutput","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/init(configuration:)","title":"init(configuration: MLModelConfiguration) throws","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/init(contentsof:)","title":"init(contentsOf: URL) throws","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/init(contentsof:configuration:)","title":"init(contentsOf: URL, configuration: MLModelConfiguration) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/model","title":"let model: MLModel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/prediction(image:)-6mxld","title":"func prediction(image: MLMultiArray) throws -> edge_sam_3x_encoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/prediction(image:)-7dv62","title":"func prediction(image: MLShapedArray<Float>) throws -> edge_sam_3x_encoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/prediction(input:)","title":"func prediction(input: edge_sam_3x_encoderInput) throws -> edge_sam_3x_encoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/prediction(input:options:)-18t47","title":"func prediction(input: edge_sam_3x_encoderInput, options: MLPredictionOptions) async throws -> edge_sam_3x_encoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/prediction(input:options:)-964zl","title":"func prediction(input: edge_sam_3x_encoderInput, options: MLPredictionOptions) throws -> edge_sam_3x_encoderOutput","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/predictions(inputs:options:)","title":"func predictions(inputs: [edge_sam_3x_encoderInput], options: MLPredictionOptions) throws -> [edge_sam_3x_encoderOutput]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/load(configuration:)","title":"class func load(configuration: MLModelConfiguration) async throws -> edge_sam_3x_encoder","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/load(configuration:completionhandler:)","title":"class func load(configuration: MLModelConfiguration, completionHandler: (Swift.Result<edge_sam_3x_encoder, Error>) -> Void)","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/load(contentsof:configuration:)","title":"class func load(contentsOf: URL, configuration: MLModelConfiguration) async throws -> edge_sam_3x_encoder","type":"method"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder\/load(contentsof:configuration:completionhandler:)","title":"class func load(contentsOf: URL, configuration: MLModelConfiguration, completionHandler: (Swift.Result<edge_sam_3x_encoder, Error>) -> Void)","type":"method"}],"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoder","title":"edge_sam_3x_encoder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderinput\/init(image:)-1v4c2","title":"init(image: MLMultiArray)","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderinput\/init(image:)-90uey","title":"init(image: MLShapedArray<Float>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderinput\/featurenames","title":"var featureNames: Set<String>","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderinput\/image","title":"var image: MLMultiArray","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderinput\/featurevalue(for:)","title":"func featureValue(for: String) -> MLFeatureValue?","type":"method"}],"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderinput","title":"edge_sam_3x_encoderInput","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput\/init(features:)","title":"init(features: MLFeatureProvider)","type":"init"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput\/init(image_embeddings:)","title":"init(image_embeddings: MLMultiArray)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput\/featurenames","title":"var featureNames: Set<String>","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput\/image_embeddings","title":"var image_embeddings: MLMultiArray","type":"property"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput\/image_embeddingsshapedarray","title":"var image_embeddingsShapedArray: MLShapedArray<Float>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput\/featurevalue(for:)","title":"func featureValue(for: String) -> MLFeatureValue?","type":"method"}],"path":"\/documentation\/edgesegmentation\/edge_sam_3x_encoderoutput","title":"edge_sam_3x_encoderOutput","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/draggablesegmentation\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/draggablesegmentation\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/edgesegmentation\/draggablesegmentation\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/draggablesegmentation\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/edgesegmentation\/draggablesegmentation\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/draggablesegmentation","title":"DraggableSegmentation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionconfiguration\/init(positivepointview:negativepointview:boxview:boxtrashview:)","title":"init(positivePointView: (_ zoomScale: CGFloat) -> PositivePoint, negativePointView: (_ zoomScale: CGFloat) -> NegativePoint, boxView: (_ box: CGRect, _ drawing: Bool, _ zoomScale: CGFloat) -> Box, boxTrashView: (_ viewSize: CGSize, _ box: CGRect, _ zoomScale: CGFloat) -> BoxTrash)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionconfiguration\/boxtrashview","title":"var boxTrashView: (_ viewSize: CGSize, _ box: CGRect, _ zoomScale: CGFloat) -> BoxTrash","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionconfiguration\/boxview","title":"var boxView: (_ box: CGRect, _ drawing: Bool, _ zoomScale: CGFloat) -> Box","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionconfiguration\/negativepointview","title":"var negativePointView: (_ zoomScale: CGFloat) -> NegativePoint","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionconfiguration\/positivepointview","title":"var positivePointView: (_ zoomScale: CGFloat) -> PositivePoint","type":"property"}],"path":"\/documentation\/edgesegmentation\/segmentationeditionconfiguration","title":"SegmentationEditionConfiguration","type":"struct"},{"path":"\/documentation\/edgesegmentation\/segmentationeditionhandlers","title":"SegmentationEditionHandlers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlayconfiguration\/init(fill:stroke:strokestyle:)","title":"init(fill: Fill, stroke: Stroke, strokeStyle: StrokeStyle?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlayconfiguration\/fill","title":"let fill: Fill","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlayconfiguration\/stroke","title":"let stroke: Stroke","type":"property"},{"path":"\/documentation\/edgesegmentation\/segmentationoverlayconfiguration\/strokestyle","title":"let strokeStyle: StrokeStyle?","type":"property"}],"path":"\/documentation\/edgesegmentation\/segmentationoverlayconfiguration","title":"SegmentationOverlayConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/zoom\/init(enabled:maxscale:onscalechanged:)","title":"init(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/zoom\/body(content:)","title":"func body(content: Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/zoom\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/edgesegmentation\/zoom\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/edgesegmentation\/zoom\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/edgesegmentation\/zoom\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/zoom","title":"Zoom","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/holepath(in:cgpath:)","title":"func HolePath(in: CGRect, cgPath: CGPath) -> Path","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentationerror\/nocontour","title":"case noContour","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/edgesegmentation\/coresegmentationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/edgesegmentation\/coresegmentationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/coresegmentationerror","title":"CoreSegmentationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/embeddingsnotcomputed","title":"case embeddingsNotComputed","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/emptyinput","title":"case emptyInput","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/failedtogetimagedata","title":"case failedToGetImageData","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/imageembeddingisnotmultiarray","title":"case imageEmbeddingIsNotMultiArray","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/invalidmodelurl(_:)","title":"case invalidModelUrl(String)","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/modelloadingerror(_:)","title":"case modelLoadingError(Error)","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/modelnotloaded","title":"case modelNotLoaded","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/noimageembeddingsoutput","title":"case noImageEmbeddingsOutput","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/nomasksinoutput","title":"case noMasksInOutput","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/noscoresinoutput","title":"case noScoresInOutput","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/padresizefailed","title":"case padResizeFailed","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/rawmaskimagedrawingfailed","title":"case rawMaskImageDrawingFailed","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/toomanypointsininput","title":"case tooManyPointsInInput","type":"case"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/unknown(_:)","title":"case unknown(Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/edgesegmentation\/coresegmentorerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/edgesegmentation\/coresegmentorerror","title":"CoreSegmentorError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/corefoundation\/cgpoint\/distance(to:)","title":"func distance(to: CGPoint) -> CGFloat","type":"method"}],"path":"\/documentation\/edgesegmentation\/corefoundation\/cgpoint","title":"CGPoint","type":"extension"}],"path":"\/documentation\/edgesegmentation\/corefoundation","title":"CoreFoundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/edgesegmentation\/swiftui\/view\/zoom(enabled:maxscale:onscalechanged:)","title":"func zoom(enabled: Bool, maxScale: CGFloat, onScaleChanged: ((CGFloat) -> Void)?) -> some View","type":"method"}],"path":"\/documentation\/edgesegmentation\/swiftui\/view","title":"View","type":"extension"}],"path":"\/documentation\/edgesegmentation\/swiftui","title":"SwiftUI","type":"extension"}],"path":"\/documentation\/edgesegmentation","title":"EdgeSegmentation","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}